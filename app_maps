#!/usr/bin/env python
# -*- coding: utf-8 -*-

# #############################################################################
# Aplicativo para hacer mapas desde SC3 y Seisan.
# 
# Camilo MuÃ±oz
# cmunozl@sgc.gov.co
#
# Ultima modificacion 08/2018
#
# #############################################################################

from Tkinter import *
import tkFileDialog
import datetime
import tkMessageBox
import Tkinter
import sys
import os
import subprocess
import os, time, math, tempfile
import numpy 
from glob import glob
from time import *
from datetime import *
import matplotlib.pyplot as plt
import matplotlib as mpl
from matplotlib import cm

#ruta = "/home/camilo/Backup_208/camilo/read_select.208/V3_codigo/"
#ruta = "/home/camilo/TEMP/scapp/"
ruta = os.path.dirname(os.path.abspath(__file__))+"/"
#ruta = "/home/camilo/scapp/"

try:
    import Gnuplot, Gnuplot.PlotItems, Gnuplot.funcutils
except ImportError:
    # kludge in case Gnuplot hasn't been installed as a module yet:
    import __init__
    Gnuplot = __init__
    import PlotItems
    Gnuplot.PlotItems = PlotItems
    import funcutils
    Gnuplot.funcutils = funcutils



class Planificador(Frame):
    def __init__(self,master):
        Frame.__init__(self, master)
        self.master = master
        self.initUI()

    def initUI(self):
        self.master.title("Select")
        self.frameOne = Frame(self.master)
        self.frameOne.grid(row=0,column=0)
        self.frameThree = Frame(self.master)
        self.frameThree.grid(row=1, column=0)
	
	#parametros=glob("/home/Cmunoz/read_select/select.inp")
	#archivo=open(parametros[0],"r")
	##print "Nombre del archivo : ", archivo.name
	##print "Cerrado o no : ", archivo.closed
	##print "Modo de apertura : ", archivo.mode
	#lines=archivo.readlines()
	##print (lines[0])
	#contenido = ''
	
	self.menu_inicial()
	
############################Ventana Inicial####################################

    def menu_inicial(self):
	
	self.Var_V2_1=IntVar()
	self.Var_V2_2=IntVar()

	self.frameThree.destroy()
	self.frameOne=Toplevel()
	self.select = Button(self.frameOne,text="Mapas", command=self.ir_mapas,width=18)
	self.select.grid(row=1, column=0, pady=(5,5))
	
	self.textopieza = Label(self.frameOne, text = "Desde SeisComp3", justify="left")
        self.textopieza.grid(row=3, column=0)

	self.check = Checkbutton(self.frameOne, variable = self.Var_V2_1, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=3, column=1)

	self.textopieza = Label(self.frameOne, text = "Desde SEISAN", justify="left")
        self.textopieza.grid(row=4, column=0)
	self.check = Checkbutton(self.frameOne, variable = self.Var_V2_2, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=4, column=1)

	self.salir2=Button(self.frameOne, text='Menu', command=self.quit)
	self.salir2.grid(row=5, column=4, padx=(5,5))
	   
   

########################################## Nuevos Mapas ###################################

	
    def ir_mapas(self):
	self.frameOne.destroy()
	self.frameThree=Toplevel()
	

	#########seigmt###################
	if self.Var_V2_2.get() == 1:
		os.system("expect_seigmt")

	#########scgmt###################

	if self.Var_V2_1.get() == 1:
		os.system("scgmt.py")

	######Variables Mapas############
	
	v36 = StringVar()
	v37 = StringVar()
	v48 = StringVar()
	v50 = StringVar()
	v51 = StringVar()
	v53_2 = StringVar()
	v53_2_2 = StringVar()
	v54_2 = StringVar()
	


	v36 = StringVar(self.frameThree)
	v36.set('Col250m_bat30s.grd')

	v37 = StringVar(self.frameThree)
	v37.set('bati2.cpt')

	v47 = StringVar(self.frameThree)
	v47.set('.pdf')

	v49 = StringVar(self.frameThree)
	v49.set('letter')

	v55 = StringVar(self.frameThree)
	v55.set('mapa.png')

	v56 = StringVar(self.frameThree)
	v56.set('mapa.pdf')

	
	v49_1 = IntVar()
	v49_2 = IntVar()
	

	Var36 = IntVar()
	Var37 = IntVar()
	Var38 = IntVar()
	Var38_1 = IntVar()
	Var38_2 = IntVar()
	Var39 = IntVar()
	Var39_1 = IntVar()
	Var40 = IntVar()
	Var41 = IntVar()
	Var41_2 = IntVar()
	Var41_3 = IntVar()
	Var42 = IntVar()
	Var43 = IntVar()
	Var44 = IntVar()
	Var45 = IntVar()
	Var46 = IntVar()
	Var47 = IntVar()
	Var48 = IntVar()
	Var49 = IntVar()
	Var50 = IntVar()
	Var51 = IntVar()
	Var52_2 = IntVar()
	Var53_2 = IntVar()
	Var54_2 = IntVar()
	Var55_2 = IntVar()
	Var56_2 = IntVar() 
	####variables version 2#######
	Var_V2_2 = IntVar()
	Var38_3 = IntVar()
	Var38_4 = IntVar()
	#######################

	#if self.Var7.get() == 1:
	#	lat_min=float(self.v7.get())
	#	lat_min2=lat_min-1
	#	lat_min3=lat_min-4
	#	#print lat_min2
	#	lat_min2str=str(lat_min2)
	#	lat_min3str=str(lat_min3)
	#else:
	#	lat_min = -5
	#if self.Var8.get() == 1:
	#	lat_max=float(maxlat)
	#	lat_max2=lat_max-2
		#print lat_max2
	#else:
	#	lat_max = 15
	#if self.Var9.get() == 1:
	#	lon_min=float(minlon)
	#	lon_min2=lon_min-2
		#print lon_min2
	#else:
	#	lon_min = -82
	#if self.Var10.get() == 1:
	#	lon_max=float(maxlon)
	#	lon_max2=lon_max-2
		#print lon_max2
	#else:
	#	lon_max=-67

	Var36.set('1'),Var37.set('1'),Var38.set('1'),Var39.set('1'),Var38_1.set('1'),Var38_3.set('1'),Var38_4.set('1'),Var44.set('1'),Var45.set('1'),Var38_2.set('1')

	###########Leer lat lon desde archivos del select######################

	minlat = str(-5)
	maxlat = str(13)
	minlon = str(-79)
	maxlon = str(-66)

	if self.Var_V2_2.get() == 1:
		archivo_inp = open(ruta+'select.inp','r')
		lines = archivo_inp.readlines()
		for line in lines:
			cont_inp = 0
			campos = line.split(":")
			for campo in campos:
				cont_inp += 1
				if cont_inp == 2:
					if "Minimum latitude" == str(line[1:17]):
						minlat = float(campo)
					elif "Maximum latitude" == str(line[1:17]):
						maxlat = float(campo)
					elif "Minimum longitude" == str(line[1:18]):
						minlon = float(campo)
					elif "Maximum longitude" == str(line[1:18]):
						maxlon = float(campo)
		archivo_inp.close

	elif self.Var_V2_1.get() == 1:
		archivo_inp = open(ruta+'search.py','r')
		lines = archivo_inp.readlines()
		for line in lines:
			campos = line.split(" ")
			cont_inp = 0
			for campo in campos:
				cont_inp += 1
				if cont_inp == 4:
					if "ROUND(Origin.latitude_value" == str(line[7:34]):
						minlat = float(campo)
				if cont_inp == 6:
					if "ROUND(Origin.latitude_value" == str(line[7:34]):
						maxlat = float(campo)
				if cont_inp == 4:
					if "ROUND(Origin.longitude_value" == str(line[7:35]):
						minlon = float(campo)
				if cont_inp == 6:
					if "ROUND(Origin.longitude_value" == str(line[7:35]):
						maxlon = float(campo)
		archivo_inp.close

	minlat = str(minlat)
	maxlat = str(maxlat)
	minlon = str(minlon)
	maxlon = str(maxlon)
		

	#############Variables para zoom aumentado##########################
	#print self.v7.get()
	v7_2=float(minlat)-0.5 #latmin
	v8_2=float(maxlat)+0.5 #latmax
	v9_2=float(minlon)-0.5 #lonmin
	v10_2=float(maxlon)+0.5 #lonmax
	v7_2str=str(v7_2)
	v8_2str=str(v8_2)
	v9_2str=str(v9_2)
	v10_2str=str(v10_2)

	################### Variables legenda version 2 codigo #########################
	
	ancho_mapa_grados = abs(float(maxlon)-float(minlon))
	alto_mapa_grados = abs(float(maxlat)-float(minlat))
	ancho_mapa_grados_amp = abs(v10_2-v9_2)
	alto_mapa_grados_amp = abs(v8_2-v7_2)
	#####Tamano del mapa ajustable automaticamenta a hoja carta 8.5ix11i###################
	if alto_mapa_grados >= ancho_mapa_grados:
		Jm_auto = 9/alto_mapa_grados
		Jm_auto_str = str(Jm_auto)
		ancho_hoja_mapa = (ancho_mapa_grados*Jm_auto)+2
		ancho_hoja_mapa_2 = (ancho_mapa_grados*Jm_auto)+2+1*Jm_auto
		ancho_hoja_mapa_str = str(ancho_hoja_mapa)
		ancho_hoja_mapa_2_str = str(ancho_hoja_mapa_2)
		agrandar_alto_hoja = (1*Jm_auto)+11
		agrandar_alto_hoja_str = str(agrandar_alto_hoja)
	if ancho_mapa_grados > alto_mapa_grados:
		Jm_auto = 6.75/ancho_mapa_grados
		Jm_auto_str = str(Jm_auto)
		alto_hoja_mapa = (alto_mapa_grados*Jm_auto)+2
		alto_hoja_mapa_2 = (alto_mapa_grados*Jm_auto)+2+1*Jm_auto
		alto_hoja_mapa_str = str(alto_hoja_mapa)
		alto_hoja_mapa_2_str = str(alto_hoja_mapa_2)
		agrandar_ancho_hoja = (1*Jm_auto)+8.5
		agrandar_ancho_hoja_str = str(agrandar_ancho_hoja)
	######Tamano legenda###################
	ancho_legenda_grados = -(ancho_mapa_grados/5)
	alto_legenda_grados = (alto_mapa_grados/5)
	ancho_legenda_pulgadas = -(ancho_mapa_grados/5)*Jm_auto
	alto_legenda_pulgadas = (alto_mapa_grados/5)*Jm_auto
	ancho_legenda_pulgadas_2 = 1.35
	alto_legenda_pulgadas_2 = 1.8
	ancho_legenda_grados_amp = -(ancho_mapa_grados_amp/5)-0.5
	alto_legenda_grados_amp = (alto_mapa_grados_amp/5)+0.5
	######Posicion legenda#################
	lon_legenda = float(maxlon)+(ancho_legenda_grados/2)
	lat_legenda = float(minlat)+(alto_legenda_grados/2)
	lon_legenda_2 = -68.5
	lat_legenda_2 = -3.0
	lon_legenda_amp = v10_2+(ancho_legenda_grados_amp/2)
	lat_legenda_amp = v7_2+(alto_legenda_grados_amp/2)
	######texto legenda######################
	lon_texto_legenda = (float(maxlon)+ancho_legenda_grados)+abs(ancho_legenda_grados)/30
	lat_texto_legenda = (float(minlat)+alto_legenda_grados)-alto_legenda_grados/40
	ancho_texto_legenda = abs(ancho_legenda_grados)-abs(ancho_legenda_grados)/15
	alto_texto_legenda = alto_legenda_grados/3
	lon_texto_legenda_2 = -69.9
	lat_texto_legenda_2 = -1.0
	ancho_texto_legenda_2 = 1.26
	alto_texto_legenda_2 = 0.59
	lon_texto_legenda_amp = (v10_2+ancho_legenda_grados_amp)+abs(ancho_legenda_grados_amp)/30
	lat_texto_legenda_amp = (v7_2+alto_legenda_grados_amp)-alto_legenda_grados_amp/40
	ancho_texto_legenda_amp = abs(ancho_legenda_grados_amp)-abs(ancho_legenda_grados_amp)/15
	alto_texto_legenda_amp = alto_legenda_grados_amp/3
	######Imagen legenda (logo SGC)#############
	pos_x_logo_pulgadas = ((ancho_mapa_grados+ancho_legenda_grados)-(ancho_legenda_grados/4))*Jm_auto
	pos_y_logo_pulgadas = (alto_legenda_grados - (alto_legenda_grados/2.86))*Jm_auto
	pos_x_logo_pulgadas_amp = ((ancho_mapa_grados_amp+ancho_legenda_grados_amp)-(ancho_legenda_grados_amp/4))*Jm_auto
	pos_y_logo_pulgadas_amp = (alto_legenda_grados_amp - (alto_legenda_grados_amp/2.86))*Jm_auto
	#######legenda profundidad#################
	lon_leg_prof_tex_1 = lon_legenda+abs(ancho_legenda_grados)/30
	lon_leg_prof_tex_2 = lon_legenda+abs(ancho_legenda_grados)/5
	lon_leg_prof_tex_3 = lon_legenda+abs(ancho_legenda_grados)/5
	lon_leg_prof_tex_4 = lon_legenda+abs(ancho_legenda_grados)/5
	lon_leg_prof_tex_5 = lon_legenda+abs(ancho_legenda_grados)/5
	lon_leg_prof_tex_6 = lon_legenda+abs(ancho_legenda_grados)/5
	
	lat_leg_prof_tex_1 = lat_legenda+alto_legenda_grados/10	
	lat_leg_prof_tex_2 = lat_legenda+alto_legenda_grados/40
	lat_leg_prof_tex_3 = lat_legenda-alto_legenda_grados/40
	lat_leg_prof_tex_4 = lat_legenda-alto_legenda_grados/13.3333333333
	lat_leg_prof_tex_5 = lat_legenda-alto_legenda_grados/8
	lat_leg_prof_tex_6 = lat_legenda-alto_legenda_grados/5.71428571429

	lon_leg_prof_esc_1 = lon_legenda+abs(ancho_legenda_grados)/10
	lon_leg_prof_esc_2 = lon_legenda+abs(ancho_legenda_grados)/10
	lon_leg_prof_esc_3 = lon_legenda+abs(ancho_legenda_grados)/10
	lon_leg_prof_esc_4 = lon_legenda+abs(ancho_legenda_grados)/10
	lon_leg_prof_esc_5 = lon_legenda+abs(ancho_legenda_grados)/10
	
	lat_leg_prof_esc_1 = lat_legenda+alto_legenda_grados/40
	lat_leg_prof_esc_2 = lat_legenda-alto_legenda_grados/40
	lat_leg_prof_esc_3 = lat_legenda-alto_legenda_grados/13.3333333333
	lat_leg_prof_esc_4 = lat_legenda-alto_legenda_grados/8
	lat_leg_prof_esc_5 = lat_legenda-alto_legenda_grados/5.71428571429
	#########legenda Magnitud##################
	lon_leg_mag_tex_1 = lon_legenda-abs(ancho_legenda_grados)/2.72727272727
	lon_leg_mag_tex_2 = lon_legenda-abs(ancho_legenda_grados)/5
	lon_leg_mag_tex_3 = lon_legenda-abs(ancho_legenda_grados)/5
	lon_leg_mag_tex_4 = lon_legenda-abs(ancho_legenda_grados)/5
	lon_leg_mag_tex_5 = lon_legenda-abs(ancho_legenda_grados)/5
	lon_leg_mag_tex_6 = lon_legenda-abs(ancho_legenda_grados)/5

	lat_leg_mag_tex_1 = lat_legenda+alto_legenda_grados/10
	lat_leg_mag_tex_2 = lat_legenda+alto_legenda_grados/40
	lat_leg_mag_tex_3 = lat_legenda-alto_legenda_grados/40
	lat_leg_mag_tex_4 = lat_legenda-alto_legenda_grados/13.3333333333
	lat_leg_mag_tex_5 = lat_legenda-alto_legenda_grados/8
	lat_leg_mag_tex_6 = lat_legenda-alto_legenda_grados/5.71428571429

	lon_leg_mag_esc_1 = lon_legenda-abs(ancho_legenda_grados)/2.72727272727
	lon_leg_mag_esc_2 = lon_legenda-abs(ancho_legenda_grados)/2.72727272727
	lon_leg_mag_esc_3 = lon_legenda-abs(ancho_legenda_grados)/2.72727272727
	lon_leg_mag_esc_4 = lon_legenda-abs(ancho_legenda_grados)/2.72727272727
	lon_leg_mag_esc_5 = lon_legenda-abs(ancho_legenda_grados)/2.72727272727

	lat_leg_mag_esc_1 = lat_legenda+alto_legenda_grados/40
	lat_leg_mag_esc_2 = lat_legenda-alto_legenda_grados/40
	lat_leg_mag_esc_3 = lat_legenda-alto_legenda_grados/13.3333333333
	lat_leg_mag_esc_4 = lat_legenda-alto_legenda_grados/8
	lat_leg_mag_esc_5 = lat_legenda-alto_legenda_grados/5.71428571429
	########legenda Estaciones Antena###########
	lon_leg_est_tex_1 = lon_legenda+abs(ancho_legenda_grados)/10
	lon_leg_est_tex_2 = lon_legenda+abs(ancho_legenda_grados)/7.5
	lon_leg_est_tex_3 = lon_legenda+abs(ancho_legenda_grados)/7.5
	lon_leg_est_tex_4 = lon_legenda+abs(ancho_legenda_grados)/7.5

	lat_leg_est_tex_1 = lat_legenda-alto_legenda_grados/4.4444444444
	lat_leg_est_tex_2 = lat_legenda-alto_legenda_grados/3.3333333333
	lat_leg_est_tex_3 = lat_legenda-alto_legenda_grados/2.66666666667
	lat_leg_est_tex_4 = lat_legenda-alto_legenda_grados/2.2222222222
	
	lon_leg_est_esc_1 = lon_legenda+abs(ancho_legenda_grados)/30
	lon_leg_est_esc_2 = lon_legenda+abs(ancho_legenda_grados)/30	
	lon_leg_est_esc_3 = lon_legenda+abs(ancho_legenda_grados)/30
	
	lat_leg_est_esc_1 = lat_legenda-alto_legenda_grados/3.3333333333
	lat_leg_est_esc_2 = lat_legenda-alto_legenda_grados/2.66666666667
	lat_leg_est_esc_3 = lat_legenda-alto_legenda_grados/2.2222222222
	########Ecala############################
	lon_legenda_escala = lon_legenda - abs(ancho_legenda_grados)/3.3333333333
	lat_legenda_escala = lat_legenda - alto_legenda_grados/2.8

	########################################VARIABLES LEGENDA AMPLIADA##############################

	#######legenda profundidad#################
	lon_leg_prof_tex_1_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/30
	lon_leg_prof_tex_2_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/5
	lon_leg_prof_tex_3_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/5
	lon_leg_prof_tex_4_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/5
	lon_leg_prof_tex_5_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/5
	lon_leg_prof_tex_6_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/5
	
	lat_leg_prof_tex_1_amp = lat_legenda_amp+alto_legenda_grados_amp/10	
	lat_leg_prof_tex_2_amp = lat_legenda_amp+alto_legenda_grados_amp/40
	lat_leg_prof_tex_3_amp = lat_legenda_amp-alto_legenda_grados_amp/40
	lat_leg_prof_tex_4_amp = lat_legenda_amp-alto_legenda_grados_amp/13.3333333333
	lat_leg_prof_tex_5_amp = lat_legenda_amp-alto_legenda_grados_amp/8
	lat_leg_prof_tex_6_amp = lat_legenda_amp-alto_legenda_grados_amp/5.71428571429

	lon_leg_prof_esc_1_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/10
	lon_leg_prof_esc_2_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/10
	lon_leg_prof_esc_3_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/10
	lon_leg_prof_esc_4_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/10
	lon_leg_prof_esc_5_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/10
	
	lat_leg_prof_esc_1_amp = lat_legenda_amp+alto_legenda_grados_amp/40
	lat_leg_prof_esc_2_amp = lat_legenda_amp-alto_legenda_grados_amp/40
	lat_leg_prof_esc_3_amp = lat_legenda_amp-alto_legenda_grados_amp/13.3333333333
	lat_leg_prof_esc_4_amp = lat_legenda_amp-alto_legenda_grados_amp/8
	lat_leg_prof_esc_5_amp = lat_legenda_amp-alto_legenda_grados_amp/5.71428571429
	#########legenda Magnitud##################
	lon_leg_mag_tex_1_amp = lon_legenda_amp-abs(ancho_legenda_grados_amp)/2.72727272727
	lon_leg_mag_tex_2_amp = lon_legenda_amp-abs(ancho_legenda_grados_amp)/5
	lon_leg_mag_tex_3_amp = lon_legenda_amp-abs(ancho_legenda_grados_amp)/5
	lon_leg_mag_tex_4_amp = lon_legenda_amp-abs(ancho_legenda_grados_amp)/5
	lon_leg_mag_tex_5_amp = lon_legenda_amp-abs(ancho_legenda_grados_amp)/5
	lon_leg_mag_tex_6_amp = lon_legenda_amp-abs(ancho_legenda_grados_amp)/5

	lat_leg_mag_tex_1_amp = lat_legenda_amp+alto_legenda_grados_amp/10
	lat_leg_mag_tex_2_amp = lat_legenda_amp+alto_legenda_grados_amp/40
	lat_leg_mag_tex_3_amp = lat_legenda_amp-alto_legenda_grados_amp/40
	lat_leg_mag_tex_4_amp = lat_legenda_amp-alto_legenda_grados_amp/13.3333333333
	lat_leg_mag_tex_5_amp = lat_legenda_amp-alto_legenda_grados_amp/8
	lat_leg_mag_tex_6_amp = lat_legenda_amp-alto_legenda_grados_amp/5.71428571429

	lon_leg_mag_esc_1_amp = lon_legenda_amp-abs(ancho_legenda_grados_amp)/2.72727272727
	lon_leg_mag_esc_2_amp = lon_legenda_amp-abs(ancho_legenda_grados_amp)/2.72727272727
	lon_leg_mag_esc_3_amp = lon_legenda_amp-abs(ancho_legenda_grados_amp)/2.72727272727
	lon_leg_mag_esc_4_amp = lon_legenda_amp-abs(ancho_legenda_grados_amp)/2.72727272727
	lon_leg_mag_esc_5_amp = lon_legenda_amp-abs(ancho_legenda_grados_amp)/2.72727272727

	lat_leg_mag_esc_1_amp = lat_legenda_amp+alto_legenda_grados_amp/40
	lat_leg_mag_esc_2_amp = lat_legenda_amp-alto_legenda_grados_amp/40
	lat_leg_mag_esc_3_amp = lat_legenda_amp-alto_legenda_grados_amp/13.3333333333
	lat_leg_mag_esc_4_amp = lat_legenda_amp-alto_legenda_grados_amp/8
	lat_leg_mag_esc_5_amp = lat_legenda_amp-alto_legenda_grados_amp/5.71428571429
	########legenda Estaciones Antena###########
	lon_leg_est_tex_1_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/10
	lon_leg_est_tex_2_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/7.5
	lon_leg_est_tex_3_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/7.5
	lon_leg_est_tex_4_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/7.5

	lat_leg_est_tex_1_amp = lat_legenda_amp-alto_legenda_grados_amp/4.4444444444
	lat_leg_est_tex_2_amp = lat_legenda_amp-alto_legenda_grados_amp/3.3333333333
	lat_leg_est_tex_3_amp = lat_legenda_amp-alto_legenda_grados_amp/2.66666666667
	lat_leg_est_tex_4_amp = lat_legenda_amp-alto_legenda_grados_amp/2.2222222222
	
	lon_leg_est_esc_1_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/30
	lon_leg_est_esc_2_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/30	
	lon_leg_est_esc_3_amp = lon_legenda_amp+abs(ancho_legenda_grados_amp)/30
	
	lat_leg_est_esc_1_amp = lat_legenda_amp-alto_legenda_grados_amp/3.3333333333
	lat_leg_est_esc_2_amp = lat_legenda_amp-alto_legenda_grados_amp/2.66666666667
	lat_leg_est_esc_3_amp = lat_legenda_amp-alto_legenda_grados_amp/2.2222222222
	########Ecala############################
	lon_legenda_escala_amp = lon_legenda_amp - abs(ancho_legenda_grados_amp)/3.3333333333
	lat_legenda_escala_amp = lat_legenda_amp - alto_legenda_grados_amp/2.8


	######################## MENU ELEGIBLE#######################################
	
	self.texto = Label(self.frameThree, height='3', text = "MAPAS", justify="center")
        self.texto.grid(row=0, column=3, columnspan=2, sticky=N+W)



################Basico Mapas###################

	self.texto = Label(self.frameThree, height='3', text = "Basico Mapa", justify="center")
        self.texto.grid(row=1, column=1)

	self.check = Checkbutton(self.frameThree, variable=Var36, onvalue =1, offvalue = 0, height=1, width = 5) ## Check topografia
	self.check.grid(row=2, column=0)
	self.textopieza = Label(self.frameThree, text = "Topografia", justify="left")
        self.textopieza.grid(row=2, column=1)
	self.O5 = OptionMenu(self.frameThree,v36,'bati.grd','Col250m_bat30s.grd','col.grd','gridOne09.grd','NE.grd','NW.grd','SE.grd','SW.grd')
	self.O5.grid(row=2, column=2, padx=(0,20))


	self.check = Checkbutton(self.frameThree, variable=Var37, onvalue =1, offvalue = 0, height=1, width = 5) ## Check Colores topografia
	self.check.grid(row=3, column=0)
	self.textopieza = Label(self.frameThree, text = "IluminaciÃ³n Topografia", justify="left")
        self.textopieza.grid(row=3, column=1)
	self.O6 = OptionMenu(self.frameThree,v37,'bati.cpt','bati2.cpt','bw.cpt','colores.cpt','gebco_c.cpt','topo.cpt')
	self.O6.grid(row=3, column=2, padx=(0,20))

	self.check = Checkbutton(self.frameThree, variable=Var38, onvalue =1, offvalue = 0, height=1, width = 5) ## Check diviciones politicas
	self.check.grid(row=4, column=0)
	self.textopieza = Label(self.frameThree, text = "DivisiÃ³n PolÃ­tica", justify="left")
        self.textopieza.grid(row=4, column=1)

################Sismos###################

	self.texto = Label(self.frameThree, height='3', text = "Sismos", justify="center")
        self.texto.grid(row=1, column=4,)

	self.check = Checkbutton(self.frameThree, variable=Var39, onvalue =1, offvalue = 0, height=1, width = 5) ## check sismos
	self.check.grid(row=2, column=3)
	self.textopieza = Label(self.frameThree, text = "Sismos", justify="left")
        self.textopieza.grid(row=2, column=4)

	self.check = Checkbutton(self.frameThree, variable=Var39_1, onvalue =1, offvalue = 0, height=1, width = 5) ## check transparencia
	self.check.grid(row=3, column=3)
	self.textopieza = Label(self.frameThree, text = "Transparencia Sismos", justify="left")
        self.textopieza.grid(row=3, column=4)

	self.check = Checkbutton(self.frameThree, variable=Var56_2, onvalue =1, offvalue = 0, height=1, width = 5) ## Check Resaltar Magnitudes Grandes
	self.check.grid(row=4, column=3)
	self.textopieza = Label(self.frameThree, text = "Resaltar Magnitudes Grandes", justify="left")
        self.textopieza.grid(row=4, column=4)

################Leyenda###################

	self.texto = Label(self.frameThree, height='3', text = "Leyenda", justify="center")
        self.texto.grid(row=5, column=1)

	self.check = Checkbutton(self.frameThree, variable=Var38_1, onvalue =1, offvalue = 0, height=1, width = 5) ## check recuadro leyenda
	self.check.grid(row=6, column=0)
	self.textopieza = Label(self.frameThree, text = "Recuadro Leyenda", justify="left")
        self.textopieza.grid(row=6, column=1)

	self.check = Checkbutton(self.frameThree, variable=Var38_3, onvalue =1, offvalue = 0, height=1, width = 5) ## check texto leyneda
	self.check.grid(row=7, column=0)
	self.textopieza = Label(self.frameThree, text = "Texto Leyenda", justify="left")
        self.textopieza.grid(row=7, column=1)

	self.check = Checkbutton(self.frameThree, variable=Var38_4, onvalue =1, offvalue = 0, height=1, width = 5) ## check logo leyenda
	self.check.grid(row=8, column=0)
	self.textopieza = Label(self.frameThree, text = "Logo Leyenda", justify="left")
        self.textopieza.grid(row=8, column=1)

	self.check = Checkbutton(self.frameThree, variable=Var44, onvalue =1, offvalue = 0, height=1, width = 5) ## check leyenda profundidad
	self.check.grid(row=9, column=0)
	self.textopieza = Label(self.frameThree, text = "Leyenda Profundidad", justify="left")
        self.textopieza.grid(row=9, column=1)

	self.check = Checkbutton(self.frameThree, variable=Var45, onvalue =1, offvalue = 0, height=1, width = 5) ## check leyenda magnitud
	self.check.grid(row=10, column=0)
	self.textopieza = Label(self.frameThree, text = "Leyenda Magnitud", justify="left")
        self.textopieza.grid(row=10, column=1)

	self.check = Checkbutton(self.frameThree, variable=Var38_2, onvalue =1, offvalue = 0, height=1, width = 5) ## check escala
	self.check.grid(row=11, column=0)
	self.textopieza = Label(self.frameThree, text = "Escala", justify="left")
        self.textopieza.grid(row=11, column=1)

	self.check = Checkbutton(self.frameThree, variable=Var41_3, onvalue =1, offvalue = 0, height=1, width = 5) ## check leyenda estaciones
	self.check.grid(row=12, column=0)
	self.textopieza = Label(self.frameThree, text = "Leyenda Estaciones", justify="left")
	self.textopieza.grid(row=12, column=1)

################Estaciones###################

	self.texto = Label(self.frameThree, height='3', text = "Estaciones y Capitales", justify="center")
        self.texto.grid(row=5, column=4)

	self.check = Checkbutton(self.frameThree, variable=Var40, onvalue =1, offvalue = 0, height=1, width = 5) ## check nombre estaciones
	self.check.grid(row=6, column=3)
	self.textopieza = Label(self.frameThree, text = "Nombre Estaciones", justify="left")
        self.textopieza.grid(row=6, column=4)

	self.check = Checkbutton(self.frameThree, variable=Var41, onvalue =1, offvalue = 0, height=1, width = 5) ## check icono estaciones
	self.check.grid(row=7, column=3)
	self.textopieza = Label(self.frameThree, text = "Icono Estaciones", justify="left")
	self.textopieza.grid(row=7, column=4)

	self.check = Checkbutton(self.frameThree, variable=Var41_2, onvalue =1, offvalue = 0, height=1, width = 5) ## check antena
	self.check.grid(row=8, column=3)
	self.textopieza = Label(self.frameThree, text = "Antena", justify="left")
	self.textopieza.grid(row=8, column=4)

################Capitales##################
#	self.texto = Label(self.frameThree, height='3', text = "Capitales", justify="center")
#        self.texto.grid(row=9, column=4)

	self.check = Checkbutton(self.frameThree, variable=Var42, onvalue =1, offvalue = 0, height=1, width = 5) ## check icono capitales
	self.check.grid(row=9, column=3)
	self.textopieza = Label(self.frameThree, text = "Icono capitales", justify="left")
        self.textopieza.grid(row=9, column=4)

	self.check = Checkbutton(self.frameThree, variable=Var43, onvalue =1, offvalue = 0, height=1, width = 5) ## check nombre capitales
	self.check.grid(row=10, column=3)
	self.textopieza = Label(self.frameThree, text = "Nombre Capitales", justify="left")
        self.textopieza.grid(row=10, column=4)

################ZOOM##################

	self.texto = Label(self.frameThree, height='3', text = "Zoom", justify="center")
        self.texto.grid(row=13, column=1)

	self.check = Checkbutton(self.frameThree, variable=Var46, onvalue =1, offvalue = 0, height=1, width = 5) ## check hacer zoom de la region del select
	self.check.grid(row=14, column=0)
	self.textopieza = Label(self.frameThree, text = "Hacer Zoom en la Region del Select", justify="left")
	self.textopieza.grid(row=14, column=1)
###############AJUSTE AUTOMATICO#######################################
	self.textopieza = Label(self.frameThree, text = "Ajuste Automatico ", justify="left")
	self.textopieza.grid(row=11, column=4)

	self.check = Checkbutton(self.frameThree, variable=Var55_2, onvalue =1, offvalue = 0, height=1, width = 5) ## check Agrandar Region select
	self.check.grid(row=12, column=3)
	self.textopieza = Label(self.frameThree, text = "Agrandar Region Select", justify="left")
	self.textopieza.grid(row=12, column=4)

	self.check = Checkbutton(self.frameThree, variable=Var49, onvalue =1, offvalue = 0, height=1, width = 5) ## check ajustar tamano hoja al mapa
	self.check.grid(row=13, column=3)
	self.textopieza = Label(self.frameThree, text = "Ajustar Tamano Hoja", justify="left")
	self.textopieza.grid(row=13, column=4)
	
	self.check = Checkbutton(self.frameThree, variable=Var_V2_2, onvalue =1, offvalue = 0, height=1, width = 5) ## Ajustar tamano mapa a la hoja carta
	self.check.grid(row=14, column=3)
	self.textopieza = Label(self.frameThree, text = "Ajusta Tamano mapa a la hoja carta", justify="left")
	self.textopieza.grid(row=14, column=4)

	self.check = Checkbutton(self.frameThree, variable=Var52_2, onvalue =1, offvalue = 0, height=1, width = 5) ## Activar mapa Region zoom
	self.check.grid(row=15, column=3)
	self.textopieza = Label(self.frameThree, text = "Mapa Region Zoom", justify="left")
	self.textopieza.grid(row=15, column=4)

#################AJUSTE MANUAL################

	self.textopieza = Label(self.frameThree, text = "Ajuste Manual  ", justify="center")
	self.textopieza.grid(row=15, column=2)

	self.check = Checkbutton(self.frameThree, variable=Var48, onvalue =1, offvalue = 0, height=1, width = 5) ## check tamano mapa
	self.check.grid(row=16, column=0)
	self.textopieza = Label(self.frameThree, text = "Tamano Mapa", justify="left")
	self.textopieza.grid(row=16, column=1)
	self.E36 = Entry(self.frameThree,width=14,textvariable=v48)
        self.E36.grid(row=16, column=2, padx=(0,10))
	self.ayuda1 = Label(self.frameThree, text = "Ayuda", justify="left")
	self.ayuda1.grid(row=16, column=4)

	self.check = Checkbutton(self.frameThree, variable=Var53_2, onvalue =1, offvalue = 0, height=1, width = 5) ## check tamano hoja
	self.check.grid(row=17, column=0)
	self.textopieza = Label(self.frameThree, text = "Tamano Hoja", justify="left")
	self.textopieza.grid(row=17, column=1)
        self.E39 = Entry(self.frameThree,width=14,textvariable=v53_2)
        self.E39.grid(row=17, column=2, padx=(0,10))
        self.E36 = Entry(self.frameThree,width=14,textvariable=v53_2_2)
        self.E36.grid(row=17, column=3, padx=(0,10))
	self.ayuda2 = Label(self.frameThree, text = "Ayuda", justify="left")
	self.ayuda2.grid(row=17, column=4, columnspan = 2)

	self.check = Checkbutton(self.frameThree, variable=Var54_2, onvalue =1, offvalue = 0, height=1, width = 5) ## check tamano mapa region zoom
	self.check.grid(row=18, column=0)
	self.textopieza = Label(self.frameThree, text = "Tamano Mapa Region Zoom", justify="left")
	self.textopieza.grid(row=18, column=1)
        self.E40 = Entry(self.frameThree,width=14,textvariable=v54_2)
        self.E40.grid(row=18, column=2, padx=(0,10))
	self.ayuda3 = Label(self.frameThree, text = "Ayuda", justify="left")
	self.ayuda3.grid(row=18, column=4)

##################LINEA#################################################

	self.c3 = Canvas(self.frameThree, width=800, height=5, bg='#DCDCDC')
	self.c3.grid(row=19, column=0, columnspan = 10, sticky=W+N)
	self.c3.create_line(3, 3, 800, 3,width=1)

	self.textopieza = Label(self.frameThree, text = "Exportar como", justify="left")
        self.textopieza.grid(row=19, column=2)
	self.O6 = OptionMenu(self.frameThree,v47,'.ps','.pdf','.jpg')
	self.O6.grid(row=19, column=3, padx=(0,20), pady=5)

	self.textopieza = Label(self.frameThree, text = "Nombres Mapas", justify="left")
        self.textopieza.grid(row=21, column=0)
        self.E41 = Entry(self.frameThree,width=14,textvariable=v55)
        self.E41.grid(row=21, column=1, padx=(0,10))
        self.E42 = Entry(self.frameThree,width=14,textvariable=v56)
        self.E42.grid(row=21, column=2, padx=(0,10))

	def showMenu1(e):
		menu1.post(e.x_root, e.y_root)
	def showMenu2(e):
		menu2.post(e.x_root, e.y_root)
	def showMenu3(e):
		menu3.post(e.x_root, e.y_root)
	def showMenu4(e):
		menu4.post(e.x_root, e.y_root)

	menu4 = Menu(self.frameThree, tearoff=0)
	menu4.add_command(label="Este valor corresponde a la proyeccion Jm del mapa,")
	menu4.add_command(label="poner valores cercanos a 0.5 para mapas grandes y")
	menu4.add_command(label="cercanos a 3.0 para mapas pequenos.")

	menu3 = Menu(self.frameThree, tearoff=0)
	menu3.add_command(label="Los valores en cada eje pueden variar")
	menu3.add_command(label="desde 300 hasta 1500, tener en cuenta")
	menu3.add_command(label="que este valor es sensible al Jm del mapa.")

	menu2 = Menu(self.frameThree, tearoff=0)
	menu2.add_command(label="Este valor corresponde a la proyeccion Jm del mapa,")
	menu2.add_command(label="para la region del zoom valores entre 0.04 para mapas")
	menu2.add_command(label="pequenos hasta 0.1 para mapas grandes.")

###########Logo###############################
	self.c1 = Canvas(self.frameThree, width=150, height=60, bg='#DCDCDC')
	self.ima1 = PhotoImage(file=ruta+'Logo-SGC3.gif')
	self.c1.grid(row=0, column=1, columnspan = 2, sticky=W+N, pady=5, padx=50)
	self.c1.create_image((0,0), image=self.ima1,anchor=NW)

	self.c1 = Canvas(self.frameThree, width=150, height=60, bg='#DCDCDC')
	self.ima2 = PhotoImage(file=ruta+'logo_gmt.gif')
	self.c1.grid(row=0, column=4, columnspan = 2, sticky=E+N, pady=5, padx=25)
	self.c1.create_image((0,0), image=self.ima2,anchor=NW)


############Linea###############################

	self.c3 = Canvas(self.frameThree, width=800, height=5, bg='#DCDCDC')
	self.c3.grid(row=5, column=0, columnspan = 10, sticky=W+N)
	self.c3.create_line(3, 3, 800, 3,width=1)

	self.c3 = Canvas(self.frameThree, width=440, height=5, bg='#DCDCDC')
	self.c3.grid(row=13, column=0, columnspan = 5, sticky=W+N)
	self.c3.create_line(3, 3, 440, 3,width=1)

	self.c3 = Canvas(self.frameThree, width=360, height=5, bg='#DCDCDC')
	self.c3.grid(row=11, column=3, columnspan = 5, sticky=E+N)
	self.c3.create_line(3, 3, 360, 3,width=1)



	self.c2 = Canvas(self.frameThree, width=5, height=350, bg='#DCDCDC')
	self.c2.grid(row=1, column=3, rowspan = 12, sticky=W)
	self.c2.create_line(3, 3, 3, 350,width=1)

	self.c3 = Canvas(self.frameThree, width=800, height=5, bg='#DCDCDC')
	self.c3.grid(row=1, column=0, columnspan = 10, sticky=W+N)
	self.c3.create_line(3, 3, 800, 3,width=1)

	self.ayuda1.bind("<Enter>", showMenu4)
	self.ayuda2.bind("<Enter>", showMenu3)
	self.ayuda3.bind("<Enter>", showMenu2)
	#self.E38.bind("<Leave>", dellMenu1)

	#############################Funciones#######################################
	def mapa():	

	   os.system("./mapa")
	   #os.system("/home/Cmunoz/read_select/codigo/./mapa")
	   os.system("mkdir data_map")
	   os.system("mv Legend Logo-SGC.eps escalaM.txt escalaM2.txt escalaM_old.txt escalaP.txt escalaP2.txt escalaP_old.txt gmt.conf gmt.history iconoE.txt iconoE2.txt iconoE_old.txt mapa mapa~ palette.cpt paletteluisa.cpt palettestations.cpt palettestations_all.cpt textoE.txt textoE2.txt textoE_old.txt textoM.txt textoM2.txt textoM_old.txt textoP.txt textoP2.txt textoP_old.txt stations_up.d stations_names_up.txt antena.def nombresc.d capitales.d estrella.txt data_map")


	def ps():
	   os.system("eog "+str(v55.get()))
	def pdf():
	   os.system("okular "+str(v56.get()))
#        def jpg():
#	   os.system("display mapa.jpg")
	def conf():
	   os.system("gedit data_map/mapa")
	
	def nombre():
	   os.system("mv mapa.png "+str(v55.get()))
	   os.system("mv mapa.pdf "+str(v56.get()))
	   print "Se guardaron los  mapas "+str(v55.get())+" y "+str(v56.get())

	######################### Modificar Codigo Mapa################################
	def modificar2():
	        os.system("cp "+ruta+"maps_files/* .")
		parametros2=glob("mapa")
		archivo2=open(parametros2[0],"r")
		print "Nombre del archivo : ", archivo2.name
		#print "Cerrado o no : ", archivo2.closed
		#print "Modo de apertura : ", archivo2.mode
		lines=archivo2.readlines()
		#print (lines[0])
		contenido2 = ''

		if v36.get() == 'bati.grd':
			v36_1 = 'bati.ilu'
		elif v36.get() == 'Col250m_bat30s.grd':
			v36_1 = 'Col250m_bat30s_int.grd'
		elif v36.get() == 'col.grd':
			v36_1 = 'col.ilu'
		elif v36.get() == 'gridOne09.grd':
			v36_1 = 'gridone09_int.grd'
		elif v36.get() == 'NE.grd':
			v36_1 = 'NE.ilu'
		elif v36.get() == 'NW.grd':
			v36_1 = 'NW.ilu'
		elif v36.get() == 'SE.grd':
			v36_1 = 'SE.ilu'
		elif v36.get() == 'SW.grd':
			v36_1 = 'SW.ilu'
		
		#### Variables modificar tamano de hoja automatico segun lat y lon ingresadas###### 
		#if self.Var7.get() == 1:#check latitud minima
		#	v49_1 = (float(maxlon)-float(minlon))*100+150
		#	v49_2 = (float(maxlat)-float(minlat))*100+300
		#	v49_1str=str(v49_1)
		#	v49_2str=str(v49_2)
			
			
		if  Var56_2.get() == 1:#check resaltar magnitudes grandes
			os.system("./expect_seigmt2")
			os.system("./mag_exp.py")
		
		for line in lines:

			#if 'SISMICIDAD REGISTRADA' in line:
			#	if self.Var3.get() == 1: #check fecha inicial del select
					#contenido2 +='echo 4.7 50 12 0 3 CM SISMICIDAD REGISTRADA DEL '+self.v3.get()+' AL '+self.v4.get()+' | pstext -R-12/40/0/60 -Jx0.5 -G0 -P -K  >! mapa.ps\n'
			#		contenido2 +='echo 4.7 50 12 0 3 CM | pstext -R-12/40/0/60 -Jx0.5 -G0 -P -K  >! mapa.ps\n'
			#	else:
			#		contenido2 += line


			if 'grdimage1' in line:
				if Var36.get() == 1:#check topografia
					if Var37.get() == 1:#check iluminacion
						if Var46.get() == 1: #check zoom
							if Var48.get() == 1: #check modificar jm
								if Var55_2.get() ==1: #check agrandar region select
									contenido2 +='gmt grdimage /home/topo/'+v36.get()+' -I/home/topo/'+v36_1+' -C/home/topo/'+v37.get()+' -R'+v9_2str+'/'+v10_2str+'/'+v7_2str+'/'+v8_2str+' -Ba2f2 -Jm'+v48.get()+'i -K -P  >> mapa.ps #grdimage1 \n'
								else:
									contenido2 +='gmt grdimage /home/topo/'+v36.get()+' -I/home/topo/'+v36_1+' -C/home/topo/'+v37.get()+' -R'+minlon+'/'+maxlon+'/'+minlat+'/'+maxlat+' -Ba2f2 -Jm'+v48.get()+'i -K -P >> mapa.ps #grdimage1 \n'	
							elif Var_V2_2.get() ==1: #check Jm automatico, ajustar mapa a hoja
								if Var55_2.get() ==1: #check agrandar region select
									contenido2 +='gmt grdimage /home/topo/'+v36.get()+' -I/home/topo/'+v36_1+' -C/home/topo/'+v37.get()+' -R'+v9_2str+'/'+v10_2str+'/'+v7_2str+'/'+v8_2str+' -Ba2f2 -Jm'+Jm_auto_str+'i -K -P  >> mapa.ps #grdimage1 \n'
								else:
									contenido2 +='gmt grdimage /home/topo/'+v36.get()+' -I/home/topo/'+v36_1+' -C/home/topo/'+v37.get()+' -R'+minlon+'/'+maxlon+'/'+minlat+'/'+maxlat+' -Ba2f2 -Jm'+Jm_auto_str+'i -K -P >> mapa.ps #grdimage1 \n'
							elif Var55_2.get() ==1: #check agrandar region select
								contenido2 +='gmt grdimage /home/topo/'+v36.get()+' -I/home/topo/'+v36_1+' -C/home/topo/'+v37.get()+' -R'+v9_2str+'/'+v10_2str+'/'+v7_2str+'/'+v8_2str+' -Ba2f2 -Jm0.45i -K -P >> mapa.ps #grdimage1 \n'
							else:
								contenido2 +='gmt grdimage /home/topo/'+v36.get()+' -I/home/topo/'+v36_1+' -C/home/topo/'+v37.get()+' -R'+minlon+'/'+maxlon+'/'+minlat+'/'+maxlat+' -Ba2f2 -Jm0.45i -K -P >> mapa.ps #grdimage1 \n'				
						else:
							contenido2 +='gmt grdimage /home/topo/'+v36.get()+' -I/home/topo/'+v36_1+' -C/home/topo/'+v37.get()+' -R-82/-67/-5/15 -Ba2f2 -Jm0.45i -K -P >> mapa.ps #grdimage1 \n'			
					else:
						contenido2 +='gmt grdimage /home/topo/'+v36.get()+' -C/home/topo/'+v37.get()+' -R-82/-67/-5/15 -Ba2f2 -Jm0.45i -K -P >> mapa.ps #grdimage1 \n'
				else:
					contenido2 +='gmt grdimage /home/topo/'+v36.get()+' -I/home/topo/'+v36_1+' -C/home/topo/'+v37.get()+' -R-82/-67/-5/15 -Ba2f2 -Jm0.45i -K -P >> mapa.ps #grdimage1 \n'

#				elif Var46.get() == 1: #check zoom
#						if Var48.get() == 1:#check modificar jm
#							contenido2 +='gmt grdimage /home/topo/ -I/home/topo/bati.ilu -C/home/topo/bati2.cpt -R'+minlon+'/'+maxlon+'/'+minlat+'/'+maxlat+' -Ba2f2 -Jm'+v48.get()+'i -K -O -P  >> mapa.ps #grdimage1 \n'
#						elif Var_V2_2.get() ==1:#check Jm automatico, ajustar mapa a hoja
#							contenido2 +='gmt grdimage /home/topo/ -I/home/topo/bati.ilu -C/home/topo/bati2.cpt -R'+minlon+'/'+maxlon+'/'+minlat+'/'+maxlat+' -Ba2f2 -Jm'+Jm_auto_str+'i -K -O -P  >> mapa.ps #grdimage1 \n'
#						else:
#							contenido2 +='gmt grdimage /home/topo/ -I/home/topo/bati.ilu -C/home/topo/bati2.cpt -R'+minlon+'/'+maxlon+'/'+minlat+'/'+maxlat+' -Ba2f2 -Jm0.45i -K -O -P  >> mapa.ps #grdimage1 \n'
								

							

			elif 'pscoast1' in line:
				if Var38.get() == 1: # check divisiones politicas
					contenido2 +='gmt pscoast -R -Jm -W0.5p -Df  -Ba2f2 -N1/1p -N2/0.3p -O -P  -K >>mapa.ps #pscoast1 \n'
				elif Var38.get() == 0:
					contenido2 +='gmt pscoast -R -Jm -W0.5p -Df  -Ba2f2 -N1/1p -O -P  -K >>mapa.ps #pscoast1 \n'
										


			
			elif 'Cpaletteluisa.cpt' in line:
				if Var39.get() == 1:
					if self.Var_V2_2.get() == 1: # check mapa desde seisan
						if Var39_1.get() == 1:
							contenido2 +='gmt psxy -R -Jm -O -K -Cpaletteluisa.cpt gmtxyz.out -t50 -Sci -W0.05 >> mapa.ps\n'
						else:
							contenido2 +='gmt psxy -R -Jm -O -K -Cpaletteluisa.cpt gmtxyz.out -Sci -W0.05 >> mapa.ps\n'
					if self.Var_V2_1.get() == 1: # check mapa desde seiscomp
						if Var39_1.get() == 1:
							contenido2 +='gmt psxy -R -Jm -O -K -Cpaletteluisa.cpt gmt_sc.out -t50 -Sci -W0.05 >> mapa.ps\n'
						else:
							contenido2 +='gmt psxy -R -Jm -O -K -Cpaletteluisa.cpt gmt_sc.out -Sci -W0.05 >> mapa.ps\n'
				else:
					contenido2 += '#gmt psxy -R -Jm -O -K -Cpaletteluisa.cpt gmtxyz.out -Sci -W0.05 >> mapa.ps\n'
			
			elif 'stations_names_up.txt' in line:
				if Var40.get() == 1: #Check nombre estaciones
					if Var41.get() == 1: #Check icono estaciones
						contenido2 +='gmt pstext stations_names_up.txt -R -Jm -O -K -D0.2 >> mapa.ps\n'
					else:
						contenido2 +='gmt pstext stations_names_up.txt -R -Jm -O -K >> mapa.ps\n'	
				else:
					contenido2 += '#gmt pstext stations_names_up.txt -R -Jm -O -K >> mapa.ps\n'


			elif 'icono_estaciones' in line:
				if Var41.get() == 1: #Check icono estaciones
					if Var41_2.get() == 1: # Check Antena
						if Var40.get() == 1: #Check nombre estaciones
							contenido2 += 'gmt psxy stations_up.d -O -R -Jm -K -Cpalettestations.cpt -Skantena/0.15i -W0/0/0 -K >>mapa.ps #icono_estaciones \n'
						else:
							contenido2 += 'gmt psxy stations_up.d -O -R -Jm -K -Cpalettestations.cpt -Skantena/0.15i -W0/0/0 -K >>mapa.ps #icono_estaciones \n'
					elif  Var40.get() == 1: #Check nombre
						contenido2 += 'gmt psxy -R -Jm -O -K formas.d -St0.2 -G255/255/255 -W1 >> mapa.ps #icono_estaciones \n'
					else:
						contenido2 += 'gmt psxy -R -Jm -O -K formas.d -St0.2 -G255/255/255 -W1  >> mapa.ps #icono_estaciones \n'
				else:
					contenido2 += '#gmt psxy -R -Jm -O -K formas.d -St0.2 -G255/255/255 -W1  >> mapa.ps #icono_estaciones \n'



			elif 'icono_capitales' in line:
				if Var42.get() == 1:
					contenido2 += 'gmt psxy -R -Jm -O -K capitales.d -Sc0.04 -G0/0/0 -W1 >> mapa.ps #icono_capitales\n'
				else:
					contenido2 += '#gmt psxy -R -Jm -O -K capitales.d -Sc0.04 -G0/0/0 -W1 >> mapa.ps #icono_capitales\n'

			elif 'nombre_capitales' in line:
				if Var43.get() == 1:
					contenido2 += 'gmt pstext nombresc.d -R -Jm -O -K  >> mapa.ps #nombre_capitales\n'
				else:
					contenido2 += '#gmt pstext nombresc.d -R -Jm -O -K >> mapa.ps #nombre_capitales\n'


			elif 'cuadrado_leyenda'in line:
				if Var38_1.get() == 1:#chect recuadro leyenda
					if Var46.get() == 1:#check zoom
						if Var55_2.get() ==1:#check agrandar region select
							contenido2 += 'echo '+str(lon_legenda_amp)+' '+str(lat_legenda_amp)+' '+str(-ancho_legenda_grados_amp*Jm_auto)+'i '+str(alto_legenda_grados_amp*Jm_auto)+'i |psxy -R -Jm -O -K -Sr -Gwhite -W5/black >> mapa.ps #cuadrado_leyenda\n'
						else:
							contenido2 += 'echo '+str(lon_legenda)+' '+str(lat_legenda)+' '+str(-ancho_legenda_pulgadas)+'i '+str(alto_legenda_pulgadas)+'i |psxy -R -Jm -O -K -Sr -Gwhite -W5/black >> mapa.ps #cuadrado_leyenda\n'
					else:
						contenido2 += 'echo '+str(lon_legenda_2)+' '+str(lat_legenda_2)+' '+str(-ancho_legenda_pulgadas_2)+'i '+str(alto_legenda_pulgadas_2)+'i |psxy -R -Jm -O -K -Sr -Gwhite -W5/black >> mapa.ps #cuadrado_leyenda\n'
				else:
					contenido2 += '# echo '+str(lon_legenda_2)+' '+str(lat_legenda_2)+' '+str(-ancho_legenda_pulgadas_2)+'i '+str(alto_legenda_pulgadas_2)+'i |psxy -R -Jm -O -K -Sr -Gwhite -W5/black >> mapa.ps #cuadrado_leyenda\n'				



			elif 'texto_legenda'in line:
				if Var38_3.get() == 1:#check texto leyenda
					if Var46.get() == 1:#check zoom
						if Var55_2.get() ==1:#check agrandar region select
							contenido2 += 'gmt pslegend Legend -R -J -Dg'+str(lon_texto_legenda_amp)+'/'+str(lat_texto_legenda_amp)+'+w'+str(ancho_texto_legenda_amp*Jm_auto)+'i/'+str(alto_texto_legenda_amp*Jm_auto)+'i+jLT -O -K >> mapa.ps #texto_legenda\n'
						else:
							contenido2 += 'gmt pslegend Legend -R -J -Dg'+str(lon_texto_legenda)+'/'+str(lat_texto_legenda)+'+w'+str(ancho_texto_legenda*Jm_auto)+'i/'+str(alto_texto_legenda*Jm_auto)+'i+jLT -O -K >> mapa.ps #texto_legenda\n'
					else:
						contenido2 += 'gmt pslegend Legend -R -J -Dg'+str(lon_texto_legenda_2)+'/'+str(lat_texto_legenda_2)+'+w'+str(ancho_texto_legenda_2)+'i/'+str(alto_texto_legenda_2)+'i+jLT -O -K >> mapa.ps #texto_legenda\n'
				else:
					contenido2 += '#gmt pslegend Legend -R -J -Dg'+str(lon_texto_legenda_2)+'/'+str(lat_texto_legenda_2)+'+w'+str(ancho_texto_legenda_2)+'i/'+str(alto_texto_legenda_2)+'i+jLT -O -K >> mapa.ps #texto_legenda\n'

			
			elif 'logo_legenda'in line:
				if Var38_4.get() == 1:#check logo leyenda
					if Var46.get() == 1:#check zoom
						if Var55_2.get() ==1:#check agrandar region select
							contenido2 += 'gmt psimage  Logo-SGC.eps -Dx'+str(pos_x_logo_pulgadas_amp)+'i/'+str(pos_y_logo_pulgadas_amp)+'i+W1.75c+jLB -O -K >> mapa.ps #logo_legenda\n'
						else:
							contenido2 += 'gmt psimage  Logo-SGC.eps -Dx'+str(pos_x_logo_pulgadas)+'i/'+str(pos_y_logo_pulgadas)+'i+w1.75c+jLB -O -K >> mapa.ps #logo_legenda\n'
					else:
						contenido2 += 'gmt psimage  Logo-SGC.eps -Dx16.3/2.96+w1.75c+jBR -O -K >> mapa.ps #logo_legenda\n'
				else:
					contenido2 += '#gmt psimage  Logo-SGC.eps -Dx16.3/2.96+w1.75c+jBR -O -K >> mapa.ps #logo_legenda\n'


			elif 'escala_legenda'in line:
				if Var38_2.get() == 1:#check escala
					if Var46.get() == 1:#check zoom
						if Var55_2.get() ==1:#check agrandar region select
							contenido2 += 'gmt psbasemap -R -Jm -L'+str(lon_legenda_escala_amp)+'/'+str(lat_legenda_escala_amp)+'/3/'+str((((-ancho_legenda_grados_amp)/3)*111))+'+l+jt -O -K -P >>mapa.ps #escala_legenda\n'
						else:
							contenido2 += 'gmt psbasemap -R -Jm -L'+str(lon_legenda_escala)+'/'+str(lat_legenda_escala)+'/3/'+str((((-ancho_legenda_grados_amp)/3)*111))+'+l+jt -O -K -P >>mapa.ps #escala_legenda\n'
					else:	
						contenido2 += 'gmt psbasemap -R -Jm -Lf-69.4/-4.5/2/100+l+jt -O -K -P >>mapa.ps #escala_legenda\n'
				else:
					contenido2 += '#gmt psbasemap -R -Jm -Lf-69.4/-4.5/2/100+l+jt -O -K -P >>mapa.ps #escala_legenda\n'


			elif 'icono_legenda_profundidad' in line:
				if Var44.get() == 1: #check leyenda profundidad
					nombre_doc1=glob("escalaP.txt")
					doc1=open(nombre_doc1[0],"r")
					lines_doc1=doc1.readlines()
					#print (lines[0])
					cont_doc1 = ''
					sum_doc1 = 0						
					for line in lines_doc1:
						sum_doc1 += 1						
						if sum_doc1 == 1:
							cont_doc1 += str(lon_leg_prof_esc_1)+'   '+str(lat_leg_prof_esc_1)+'    0.0   0.08\n'
						if sum_doc1 == 2:
							cont_doc1 += str(lon_leg_prof_esc_2)+'   '+str(lat_leg_prof_esc_2)+'   35.0   0.08\n'
						if sum_doc1 == 3:
							cont_doc1 += str(lon_leg_prof_esc_3)+'   '+str(lat_leg_prof_esc_3)+'   75.0   0.08\n'
						if sum_doc1 == 4:
							cont_doc1 += str(lon_leg_prof_esc_4)+'   '+str(lat_leg_prof_esc_4)+'  130.0   0.08\n'
						if sum_doc1 == 5:
							cont_doc1 += str(lon_leg_prof_esc_5)+'   '+str(lat_leg_prof_esc_5)+'  200.0   0.08\n'
					doc1.close()
					doc1=open(nombre_doc1[0],"w")
					doc1.write(cont_doc1)
					doc1.close()
					if Var46.get() == 1:#check zoom
						if Var55_2.get() ==1:#check agrandar region select
							nombre_doc1_2=glob("escalaP2.txt")
							doc1_2=open(nombre_doc1_2[0],"r")
							lines_doc1_2=doc1_2.readlines()
							#print (lines[0])
							cont_doc1_2 = ''
							sum_doc1_2 = 0						
							for line in lines_doc1_2:
								sum_doc1_2 += 1						
								if sum_doc1_2 == 1:
									cont_doc1_2 += str(lon_leg_prof_esc_1_amp)+'   '+str(lat_leg_prof_esc_1_amp)+'    0.0   0.08\n'
								if sum_doc1_2 == 2:
									cont_doc1_2 += str(lon_leg_prof_esc_2_amp)+'   '+str(lat_leg_prof_esc_2_amp)+'   35.0   0.08\n'
								if sum_doc1_2 == 3:
									cont_doc1_2 += str(lon_leg_prof_esc_3_amp)+'   '+str(lat_leg_prof_esc_3_amp)+'   75.0   0.08\n'
								if sum_doc1_2 == 4:
									cont_doc1_2 += str(lon_leg_prof_esc_4_amp)+'   '+str(lat_leg_prof_esc_4_amp)+'  130.0   0.08\n'
								if sum_doc1_2 == 5:
									cont_doc1_2 += str(lon_leg_prof_esc_5_amp)+'   '+str(lat_leg_prof_esc_5_amp)+'  200.0   0.08\n'
							doc1_2.close()
							doc1_2=open(nombre_doc1_2[0],"w")
							doc1_2.write(cont_doc1_2)
							doc1_2.close()
							contenido2 += 'gmt psxy -R -Jm -O -K -Cpalette.cpt escalaP2.txt -Sci -W0.05 >> mapa.ps #icono_legenda_profundidad\n'
						else:							
							contenido2 += 'gmt psxy -R -Jm -O -K -Cpalette.cpt escalaP.txt -Sci -W0.05 >> mapa.ps #icono_legenda_profundidad\n'
					else:
						contenido2 +='gmt psxy -R -Jm -O -K -Cpalette.cpt escalaP_old.txt -Sci -W0.05 >> mapa.ps #icono_legenda_profundidad\n'
				else:				
					contenido2 +='#gmt psxy -R -Jm -O -K -Cpalette.cpt escalaP.txt -Sci -W0.05 >> mapa.ps #icono_legenda_profundidad\n'

			
			elif 'texto_leg_profundidad' in line:
				if Var44.get() == 1: #check leyenda profundidad
					nombre_doc2=glob("textoP.txt")
					doc2=open(nombre_doc2[0],"r")
					lines_doc2=doc2.readlines()
					#print (lines[0])
					cont_doc2 = ''
					sum_doc2 = 0						
					for line in lines_doc2:
						sum_doc2 += 1
						#print line					
						if sum_doc2 == 1:
							cont_doc2 += str(lon_leg_prof_tex_1)+'   '+str(lat_leg_prof_tex_1)+'  5 0 1 5 Profundidad (Km)\n'
						if sum_doc2 == 2:
							cont_doc2 += str(lon_leg_prof_tex_2)+'   '+str(lat_leg_prof_tex_2)+'  5 0 4 5   0 - 30\n'
						if sum_doc2 == 3:
							cont_doc2 += str(lon_leg_prof_tex_3)+'   '+str(lat_leg_prof_tex_3)+'  5 0 4 5  30 - 70\n'
						if sum_doc2 == 4:
							cont_doc2 += str(lon_leg_prof_tex_4)+'   '+str(lat_leg_prof_tex_4)+'  5 0 4 5  70 - 120\n'
						if sum_doc2 == 5:
							cont_doc2 += str(lon_leg_prof_tex_5)+'   '+str(lat_leg_prof_tex_5)+'  5 0 4 5 120 - 180\n'
						if sum_doc2 == 6:
							cont_doc2 += str(lon_leg_prof_tex_6)+'   '+str(lat_leg_prof_tex_6)+'  5 0 4 5     > 180\n'
					doc2.close()
					doc2=open(nombre_doc2[0],"w")
					doc2.write(cont_doc2)
					doc2.close()
					if Var46.get() == 1:#check zoom
						if Var55_2.get() ==1:#check agrandar region select
							nombre_doc2_2=glob("textoP2.txt")
							doc2_2=open(nombre_doc2_2[0],"r")
							lines_doc2_2=doc2_2.readlines()
							#print (lines[0])
							cont_doc2_2 = ''
							sum_doc2_2 = 0						
							for line in lines_doc2_2:
								sum_doc2_2 += 1	
								#print line					
								if sum_doc2_2 == 1:
									cont_doc2_2 += str(lon_leg_prof_tex_1_amp)+'   '+str(lat_leg_prof_tex_1_amp)+'  5 0 1 5 Profundidad (Km)\n'
								if sum_doc2_2 == 2:
									cont_doc2_2 += str(lon_leg_prof_tex_2_amp)+'   '+str(lat_leg_prof_tex_2_amp)+'  5 0 4 5   0 - 30\n'
								if sum_doc2_2 == 3:
									cont_doc2_2 += str(lon_leg_prof_tex_3_amp)+'   '+str(lat_leg_prof_tex_3_amp)+'  5 0 4 5  30 - 70\n'
								if sum_doc2_2 == 4:
									cont_doc2_2 += str(lon_leg_prof_tex_4_amp)+'   '+str(lat_leg_prof_tex_4_amp)+'  5 0 4 5  70 - 120\n'
								if sum_doc2_2 == 5:
									cont_doc2_2 += str(lon_leg_prof_tex_5_amp)+'   '+str(lat_leg_prof_tex_5_amp)+'  5 0 4 5 120 - 180\n'
								if sum_doc2_2 == 6:
									cont_doc2_2 += str(lon_leg_prof_tex_6_amp)+'   '+str(lat_leg_prof_tex_6_amp)+'  5 0 4 5     > 180\n'
							doc2_2.close()
							doc2_2=open(nombre_doc2_2[0],"w")
							doc2_2.write(cont_doc2_2)
							doc2_2.close()
							contenido2 += 'gmt pstext -R -Jm -O  -K textoP2.txt -W255/255/255  >> mapa.ps #texto_leg_profundidad \n'
						else:							
							contenido2 += 'gmt pstext -R -Jm -O  -K textoP.txt -W255/255/255  >> mapa.ps #texto_leg_profundidad\n'
					else:
						contenido2 +='gmt pstext -R -Jm -O  -K textoP_old.txt -W255/255/255  >> mapa.ps #texto_leg_profundidad\n'
				else:				
					contenido2 +='#gmt pstext -R -Jm -O  -K textoP.txt -W255/255/255  >> mapa.ps #texto_leg_profundidad\n'
			

			
			elif 'icono_leg_magnitud' in line:
				if Var45.get() == 1: #check leyenda magnitud
					nombre_doc3=glob("escalaM.txt")
					doc3=open(nombre_doc3[0],"r")
					lines_doc3=doc3.readlines()
					#print (lines[0])
					cont_doc3 = ''
					sum_doc3 = 0						
					for line in lines_doc3:
						sum_doc3 += 1						
						if sum_doc3 == 1:
							cont_doc3 += str(lon_leg_mag_esc_1)+'   '+str(lat_leg_mag_esc_1)+'  900   0.090\n'
						if sum_doc3 == 2:
							cont_doc3 += str(lon_leg_mag_esc_2)+'   '+str(lat_leg_mag_esc_2)+'  900   0.120\n'
						if sum_doc3 == 3:
							cont_doc3 += str(lon_leg_mag_esc_3)+'   '+str(lat_leg_mag_esc_3)+'  900   0.150\n'
						if sum_doc3 == 4:
							cont_doc3 += str(lon_leg_mag_esc_4)+'   '+str(lat_leg_mag_esc_4)+'  900   0.180\n'
						if sum_doc3 == 5:
							cont_doc3 += str(lon_leg_mag_esc_5)+'   '+str(lat_leg_mag_esc_5)+'  900   0.210\n'
					doc3.close()
					doc3=open(nombre_doc3[0],"w")
					doc3.write(cont_doc3)
					doc3.close()
					if Var46.get() == 1:#check zoom
						if Var55_2.get() ==1:#check agrandar region select
							nombre_doc3_2=glob("escalaM2.txt")
							doc3_2=open(nombre_doc3_2[0],"r")
							lines_doc3_2=doc3_2.readlines()
							#print (lines[0])
							cont_doc3_2 = ''
							sum_doc3_2 = 0						
							for line in lines_doc3_2:
								sum_doc3_2 += 1						
								if sum_doc3_2 == 1:
									cont_doc3_2 += str(lon_leg_mag_esc_1_amp)+'   '+str(lat_leg_mag_esc_1_amp)+'  900   0.090\n'
								if sum_doc3_2 == 2:
									cont_doc3_2 += str(lon_leg_mag_esc_2_amp)+'   '+str(lat_leg_mag_esc_2_amp)+'  900   0.120\n'
								if sum_doc3_2 == 3:
									cont_doc3_2 += str(lon_leg_mag_esc_3_amp)+'   '+str(lat_leg_mag_esc_3_amp)+'  900   0.150\n'
								if sum_doc3_2 == 4:
									cont_doc3_2 += str(lon_leg_mag_esc_4_amp)+'   '+str(lat_leg_mag_esc_4_amp)+'  900   0.180\n'
								if sum_doc3_2 == 5:
									cont_doc3_2 += str(lon_leg_mag_esc_5_amp)+'   '+str(lat_leg_mag_esc_5_amp)+'  900   0.210\n'
							doc3_2.close()
							doc3_2=open(nombre_doc3_2[0],"w")
							doc3_2.write(cont_doc3_2)
							doc3_2.close()
							contenido2 += 'gmt psxy -R -Jm -O -K -Cpalette.cpt escalaM2.txt -Sci -W0.05 >> mapa.ps #icono_leg_magnitud\n'
						else:							
							contenido2 += 'gmt psxy -R -Jm -O -K -Cpalette.cpt escalaM.txt -Sci -W0.05 >> mapa.ps #icono_leg_magnitud\n'
					else:
						contenido2 +='gmt psxy -R -Jm -O -K -Cpalette.cpt escalaM_old.txt -Sci -W0.05 >> mapa.ps #icono_leg_magnitud\n'
				else:				
					contenido2 +='#gmt psxy -R -Jm -O -K -Cpalette.cpt escalaM.txt -Sci -W0.05 >> mapa.ps #icono_leg_magnitud\n'
			


			elif 'texto_leg_magnitud' in line:
				if Var45.get() == 1: #check leyenda magnitud
					nombre_doc4=glob("textoM.txt")
					doc4=open(nombre_doc4[0],"r")
					lines_doc4=doc4.readlines()
					#print (lines[0])
					cont_doc4 = ''
					sum_doc4 = 0						
					for line in lines_doc4:
						sum_doc4 += 1						
						if sum_doc4 == 1:
							cont_doc4 += str(lon_leg_mag_tex_1)+'   '+str(lat_leg_mag_tex_1)+'  5 0 1 5 Magnitud\n'
						if sum_doc4 == 2:
							cont_doc4 += str(lon_leg_mag_tex_2)+'   '+str(lat_leg_mag_tex_2)+'  5 0 4 5    3\n'
						if sum_doc4 == 3:
							cont_doc4 += str(lon_leg_mag_tex_3)+'   '+str(lat_leg_mag_tex_3)+'  5 0 4 5    4\n'
						if sum_doc4 == 4:
							cont_doc4 += str(lon_leg_mag_tex_4)+'   '+str(lat_leg_mag_tex_4)+'  5 0 4 5    5\n'
						if sum_doc4 == 5:
							cont_doc4 += str(lon_leg_mag_tex_5)+'   '+str(lat_leg_mag_tex_5)+'  5 0 4 5    6\n'
						if sum_doc4 == 6:
							cont_doc4 += str(lon_leg_mag_tex_6)+'   '+str(lat_leg_mag_tex_6)+'  5 0 4 5    7\n'
					doc4.close()
					doc4=open(nombre_doc4[0],"w")
					doc4.write(cont_doc4)
					doc4.close()
					if Var46.get() == 1:#check zoom
						if Var55_2.get() ==1:#check agrandar region select
							nombre_doc4_2=glob("textoM2.txt")
							doc4_2=open(nombre_doc4_2[0],"r")
							lines_doc4_2=doc4_2.readlines()
							#print (lines[0])
							cont_doc4_2 = ''
							sum_doc4_2 = 0						
							for line in lines_doc4_2:
								sum_doc4_2 += 1						
								if sum_doc4_2 == 1:
									cont_doc4_2 += str(lon_leg_mag_tex_1_amp)+'   '+str(lat_leg_mag_tex_1_amp)+'  5 0 1 5 Magnitud\n'
								if sum_doc4_2 == 2:
									cont_doc4_2 += str(lon_leg_mag_tex_2_amp)+'   '+str(lat_leg_mag_tex_2_amp)+'  5 0 4 5    3\n'
								if sum_doc4_2 == 3:
									cont_doc4_2 += str(lon_leg_mag_tex_3_amp)+'   '+str(lat_leg_mag_tex_3_amp)+'  5 0 4 5    4\n'
								if sum_doc4_2 == 4:
									cont_doc4_2 += str(lon_leg_mag_tex_4_amp)+'   '+str(lat_leg_mag_tex_4_amp)+'  5 0 4 5    5\n'
								if sum_doc4_2 == 5:
									cont_doc4_2 += str(lon_leg_mag_tex_5_amp)+'   '+str(lat_leg_mag_tex_5_amp)+'  5 0 4 5    6\n'
								if sum_doc4_2 == 6:
									cont_doc4_2 += str(lon_leg_mag_tex_6_amp)+'   '+str(lat_leg_mag_tex_6_amp)+'  5 0 4 5    7\n'
							doc4_2.close()
							doc4_2=open(nombre_doc4_2[0],"w")
							doc4_2.write(cont_doc4_2)
							doc4_2.close()
							contenido2 += 'gmt pstext -R -Jm -O  -K textoM2.txt  -W255/255/255  >> mapa.ps #texto_leg_magnitud\n'
						else:							
							contenido2 += 'gmt pstext -R -Jm -O  -K textoM.txt  -W255/255/255  >> mapa.ps #texto_leg_magnitud\n'
					else:
						contenido2 +='gmt pstext -R -Jm -O  -K textoM_old.txt  -W255/255/255  >> mapa.ps #texto_leg_magnitud\n'
				else:				
					contenido2 +='#gmt pstext -R -Jm -O  -K textoM.txt  -W255/255/255  >> mapa.ps #texto_leg_magnitud\n'


		
			
			elif 'icono_leg_estaciones' in line:
				if Var41_3.get() == 1: #check leyenda estaciones
					nombre_doc5=glob("iconoE.txt")
					doc5=open(nombre_doc5[0],"r")
					lines_doc5=doc5.readlines()
					#print (lines[0])
					cont_doc5 = ''
					sum_doc5 = 0						
					for line in lines_doc5:
						sum_doc5 += 1						
						if sum_doc5 == 1:
							cont_doc5 += str(lon_leg_est_esc_1)+'   '+str(lat_leg_est_esc_1)+'  0 0.1\n'
						if sum_doc5 == 2:
							cont_doc5 += str(lon_leg_est_esc_2)+'   '+str(lat_leg_est_esc_2)+'  2 0.1\n'
						if sum_doc5 == 3:
							cont_doc5 += str(lon_leg_est_esc_3)+'   '+str(lat_leg_est_esc_3)+'  1 0.1\n'
					doc5.close()
					doc5=open(nombre_doc5[0],"w")
					doc5.write(cont_doc5)
					doc5.close()
					if Var46.get() == 1:#check zoom
						if Var55_2.get() ==1:#check agrandar region select
							nombre_doc5_2=glob("iconoE2.txt")
							doc5_2=open(nombre_doc5_2[0],"r")
							lines_doc5_2=doc5_2.readlines()
							#print (lines[0])
							cont_doc5_2 = ''
							sum_doc5_2 = 0						
							for line in lines_doc5_2:
								sum_doc5_2 += 1						
								if sum_doc5_2 == 1:
									cont_doc5_2 += str(lon_leg_est_esc_1_amp)+'   '+str(lat_leg_est_esc_1_amp)+'  0 0.1\n'
								if sum_doc5_2 == 2:
									cont_doc5_2 += str(lon_leg_est_esc_2_amp)+'   '+str(lat_leg_est_esc_2_amp)+'  2 0.1\n'
								if sum_doc5_2 == 3:
									cont_doc5_2 += str(lon_leg_est_esc_3_amp)+'   '+str(lat_leg_est_esc_3_amp)+'  1 0.1\n'
							doc5_2.close()
							doc5_2=open(nombre_doc5_2[0],"w")
							doc5_2.write(cont_doc5_2)
							doc5_2.close()
							contenido2 += 'gmt psxy -R -Jm -O -K -Cpalettestations_all.cpt iconoE2.txt -Skantena/0.15i -W0.25 >> mapa.ps #icono_leg_estaciones\n'
						else:							
							contenido2 += 'gmt psxy -R -Jm -O -K -Cpalettestations_all.cpt iconoE.txt -Skantena/0.15i -W0.25 >> mapa.ps #icono_leg_estaciones\n'
					else:
						contenido2 +='gmt psxy -R -Jm -O -K -Cpalettestations_all.cpt iconoE_old.txt -Skantena/0.15i -W0.25 >> mapa.ps #icono_leg_estaciones\n'
				else:				
					contenido2 +='#gmt psxy -R -Jm -O -K -Cpalettestations_all.cpt iconoE.txt -Skantena/0.15i -W0.25 >> mapa.ps #icono_leg_estaciones\n'



			

			elif 'texto_leg_estaciones' in line:
				if Var41_3.get() == 1: #check leyenda estaciones
					nombre_doc6=glob("textoE.txt")
					doc6=open(nombre_doc6[0],"r")
					lines_doc6=doc6.readlines()
					#print (lines[0])
					cont_doc6 = ''
					sum_doc6 = 0						
					for line in lines_doc6:
						sum_doc6 += 1						
						if sum_doc6 == 1:
							cont_doc6 += str(lon_leg_est_tex_1)+'   '+str(lat_leg_est_tex_1)+' 5 0 1 5   Estaciones\n'
						if sum_doc6 == 2:
							cont_doc6 += str(lon_leg_est_tex_2)+'   '+str(lat_leg_est_tex_2)+' 5 0 0 5   Banda Ancha\n'
						if sum_doc6 == 3:
							cont_doc6 += str(lon_leg_est_tex_3)+'   '+str(lat_leg_est_tex_3)+' 5 0 0 5   Corto Periodo\n'
						if sum_doc6 == 4:
							cont_doc6 += str(lon_leg_est_tex_4)+'   '+str(lat_leg_est_tex_4)+' 5 0 0 5   Internacionales\n'
					doc6.close()
					doc6=open(nombre_doc6[0],"w")
					doc6.write(cont_doc6)
					doc6.close()
					if Var46.get() == 1:#check zoom
						if Var55_2.get() ==1:#check agrandar region select
							nombre_doc6_2=glob("textoE2.txt")
							doc6_2=open(nombre_doc6_2[0],"r")
							lines_doc6_2=doc6_2.readlines()
							#print (lines[0])
							cont_doc6_2 = ''
							sum_doc6_2 = 0						
							for line in lines_doc6_2:
								sum_doc6_2 += 1						
								if sum_doc6_2 == 1:
									cont_doc6_2 += str(lon_leg_est_tex_1_amp)+'   '+str(lat_leg_est_tex_1_amp)+' 5 0 1 5   Estaciones\n'
								if sum_doc6_2 == 2:
									cont_doc6_2 += str(lon_leg_est_tex_2_amp)+'   '+str(lat_leg_est_tex_2_amp)+' 5 0 0 5   Banda Ancha\n'
								if sum_doc6_2 == 3:
									cont_doc6_2 += str(lon_leg_est_tex_3_amp)+'   '+str(lat_leg_est_tex_3_amp)+' 5 0 0 5   Corto Periodo\n'
								if sum_doc6_2 == 4:
									cont_doc6_2 += str(lon_leg_est_tex_4_amp)+'   '+str(lat_leg_est_tex_4_amp)+' 5 0 0 5   Internacionales\n'
							doc6_2.close()
							doc6_2=open(nombre_doc6_2[0],"w")
							doc6_2.write(cont_doc6_2)
							doc6_2.close()
							contenido2 += 'gmt pstext -R -Jm -O -K  textoE2.txt  >> mapa.ps #texto_leg_estaciones\n'
						else:							
							contenido2 += 'gmt pstext -R -Jm -O -K  textoE.txt  >> mapa.ps #texto_leg_estaciones\n'
					else:
						contenido2 +='gmt pstext -R -Jm -O -K  textoE_old.txt  >> mapa.ps #texto_leg_estaciones\n'
				else:				
					contenido2 +='#gmt pstext -R -Jm -O -K  textoE.txt  >> mapa.ps #texto_leg_estaciones\n'
			
			




			elif 'grdimage_mapa_zoom' in line:
				if Var46.get() == 1:#check zoom
					if Var52_2.get()== 1:#check mapa zoom automatico
						if Var44.get() == 1: #check leyenda profundidad
							if Var40.get() == 1: #Check nombre estaciones
								if Var41.get() == 1: #Check icono estaciones
									if Var54_2.get() == 1: #Check ajuste manual mapa zoom
										contenido2 += 'gmt grdimage /home/topo/bati.grd -C/home/topo/bati2.cpt -R-82/-66.7/-4.3/14 -Bf7 -Jm'+v54_2.get()+'i -O  -P -K -I/home/topo/bati.ilu >> mapa.ps #grdimage_mapa_zoom\n'
									else:
										contenido2 += 'gmt grdimage /home/topo/bati.grd -C/home/topo/bati2.cpt -R-82/-66.7/-4.3/14 -Bf7 -Jm0.08i -O -P -K -I/home/topo/bati.ilu >> mapa.ps #grdimage_mapa_zoom\n'
								elif Var54_2.get() == 1: #Check ajuste manual mapa zoom
									contenido2 += 'gmt grdimage /home/topo/bati.grd -C/home/topo/bati2.cpt -R-82/-66.7/-4.3/14 -Bf7 -Jm'+v54_2.get()+'i -O -P -K -I/home/topo/bati.ilu >> mapa.ps #grdimage_mapa_zoom\n'
								else:
									contenido2 += 'gmt grdimage /home/topo/bati.grd -C/home/topo/bati2.cpt -R-82/-66.7/-4.3/14 -Bf7 -Jm0.08i -O -P -K -I/home/topo/bati.ilu >> mapa.ps #grdimage_mapa_zoom\n'
							elif Var54_2.get() == 1: #Check ajuste manual mapa zoom
								contenido2 += 'gmt grdimage /home/topo/bati.grd -C/home/topo/bati2.cpt -R-82/-66.7/-4.3/14 -Bf7 -Jm'+v54_2.get()+'i -O -P -K -I/home/topo/bati.ilu >> mapa.ps #grdimage_mapa_zoom\n'
							else:
								contenido2 += 'gmt grdimage /home/topo/bati.grd -C/home/topo/bati2.cpt -R-82/-66.7/-4.3/14 -Bf7 -Jm0.08i -O -P -K -I/home/topo/bati.ilu >> mapa.ps #grdimage_mapa_zoom\n'
						elif Var54_2.get() == 1: #Check ajuste manual mapa zoom
							contenido2 += 'gmt grdimage /home/topo/bati.grd -C/home/topo/bati2.cpt -R-82/-66.7/-4.3/14 -Bf7 -Jm'+v54_2.get()+'i -O -P -K -I/home/topo/bati.ilu >> mapa.ps #grdimage_mapa_zoom\n'
						else:
							contenido2 += 'gmt grdimage /home/topo/bati.grd -C/home/topo/bati2.cpt -R-82/-66.7/-4.3/14 -Bf7 -Jm0.08i -O -P -K -I/home/topo/bati.ilu >> mapa.ps #grdimage_mapa_zoom\n'
					else:
						contenido2 += '#gmt grdimage /home/topo/bati.grd -C/home/topo/bati2.cpt -R-82/-66.7/-4.3/14 -Bf7 -Jm0.08i -O -P -K -I/home/topo/bati.ilu >> mapa.ps #grdimage_mapa_zoom\n'	
				else:
					contenido2 += '#gmt grdimage /home/topo/bati.grd -C/home/topo/bati2.cpt -R-82/-66.7/-4.3/14 -Bf7 -Jm0.08i -O -P -K -I/home/topo/bati.ilu >> mapa.ps #grdimage_mapa_zoom\n'
					
					
					
					


			
			elif 'pscoast2_mapa_zoom' in line:
				if Var46.get() == 1:#check zoom
					if Var52_2.get()== 1:#check mapa zoom automatico
						contenido2 += 'gmt pscoast -R-82/-66.7/-4.3/14 -Jm -W0.3p/200 -Di  -N1/0.4p -O -P -K >> mapa.ps #pscoast2_mapa_zoom \n'
					elif Var54_2.get() == 1: #Check ajuste manual mapa zoom
						contenido2 += 'gmt pscoast -R-82/-66.7/-4.3/14 -Jm -W0.3p/200 -Di  -N1/0.4p -O -P -K >> mapa.ps #pscoast2_mapa_zoom \n'
					else:
						contenido2 += '#gmt pscoast -R-82/-66.7/-4.3/14 -Jm -W0.3p/200 -Di  -N1/0.4p -O -P -K  >> mapa.ps #pscoast2_mapa_zoom \n'
				else:
					contenido2 += '#gmt pscoast -R-82/-66.7/-4.3/14 -Jm -W0.3p/200 -Di  -N1/0.4p -O -P -K  >> mapa.ps #pscoast2_mapa_zoom \n'

			elif 'cuadrado_zoom' in line:
				if Var46.get() == 1:#check zoom
					if Var52_2.get()== 1:#check mapa zoom automatico
						contenido2 += 'gmt psxy -R -Jm -W1p/0/0/0 -L -O -N -A -V -K << END >> mapa.ps #cuadrado_zoom  \n'
					elif Var54_2.get() == 1: #Check ajuste manual mapa zoom
						contenido2 += 'gmt psxy -R -Jm -W1p/0/0/0 -L -O -N -A -V -K << END >> mapa.ps #cuadrado_zoom  \n'
					else:
						contenido2 += '#gmt psxy -R -Jm -W1p/0/0/0 -L -O -N -A -V -K << END >> mapa.ps #cuadrado_zoom  \n'
				else:
					contenido2 += '#gmt psxy -R -Jm -W1p/0/0/0 -L -O -N -A -V -K << END >> mapa.ps #cuadrado_zoom  \n'
					
			elif 'coordenadas_1' in line:
				if Var46.get() == 1:#check zoom
					contenido2 += ''+minlon+' '+maxlat+' #coordenadas_1\n'
				else:
					contenido2 += '#coordenadas_1\n'
			
			elif 'coordenadas_2' in line:
				if Var46.get() == 1:#check zoom
					contenido2 += ''+maxlon+' '+maxlat+' #coordenadas_2\n'
				else:
					contenido2 += '#coordenadas_2\n'
			
			elif 'coordenadas_3' in line:
				if Var46.get() == 1:#check zoom
					contenido2 += ''+maxlon+' '+minlat+' #coordenadas_3\n'
				else:
					contenido2 += '#coordenadas_3\n'
			
			elif 'coordenadas_4' in line:
				if Var46.get() == 1:#check zoom
					contenido2 += ''+minlon+' '+minlat+' #coordenadas_4\n'
				else:
					contenido2 += '#coordenadas_4\n'



			elif 'PAPER_MEDIA' in line:
				if Var49.get() ==1:#check tamano de hoja automatico
					contenido2 += 'gmtset PS_MEDIA Custom_'+v49_1str+'x'+v49_2str+' #PAPER_MEDIA\n'
				elif Var53_2.get() ==1:#check tramano hoja manual
					contenido2 += 'gmtset PS_MEDIA Custom_'+v53_2.get()+'x'+v53_2_2.get()+' #PAPER_MEDIA\n'
				elif Var_V2_2.get() ==1:#check Jm automatico, ajustar mapa a hoja
					if alto_mapa_grados >= ancho_mapa_grados:
						if Var55_2.get() ==1:#check agrandar region select
							contenido2 += 'gmtset PS_MEDIA Custom_'+ancho_hoja_mapa_2_str+'i'+'x'+agrandar_alto_hoja_str+'i'+' #PAPER_MEDIA\n'
						else:
							contenido2 += 'gmtset PS_MEDIA Custom_'+ancho_hoja_mapa_str+'i'+'x11i'+' #PAPER_MEDIA\n'
					elif ancho_mapa_grados > alto_mapa_grados:
						if Var55_2.get() ==1:#check agrandar region select
							contenido2 += 'gmtset PS_MEDIA Custom_'+agrandar_ancho_hoja_str+'i'+'x'+alto_hoja_mapa_2_str+'i'+' #PAPER_MEDIA\n'
						else:
							contenido2 += 'gmtset PS_MEDIA Custom_8.5ix'+alto_hoja_mapa_str+'i'+' #PAPER_MEDIA\n'
				else:
					contenido2 += 'gmtset PS_MEDIA letter #PAPER_MEDIA\n'

				
#			elif 'ps2pdf' in line:
#				if v47.get() == '.pdf':
#					contenido2 += 'ps2pdf mapa.ps\n'
#				else:
#					contenido2 += '#ps2pdf mapa.ps\n'
#			elif 'convert' in line:
#				if v47.get() == '.jpg':
#					contenido2 += 'convert mapa.ps mapa.jpg\n'
#				else:
#					contenido2 += '#convert mapa.ps mapa.jpg\n'
			else:
				contenido2 += line
			
		archivo2.close()
		archivo2=open(parametros2[0],"w")
		archivo2.write(contenido2)
		archivo2.close()
		



	############################ Menu Mapas ##########################
	self.menu=Button(self.frameThree, text='Cargar Conf.', command=modificar2)
	self.menu.grid(row=20, column=0, padx=(0,10))

	self.menu=Button(self.frameThree, text='Mapa', command=mapa)
	self.menu.grid(row=20, column=1, padx=(0,10))

	self.menu=Button(self.frameThree, text='Ver .PNG', command=ps)
	self.menu.grid(row=20, column=2, padx=(0,10))

	self.menu=Button(self.frameThree, text='Ver .PDF', command=pdf)
	self.menu.grid(row=20, column=3, padx=(0,10))

	self.menu=Button(self.frameThree, text='Archivo Configuracion', command=conf)
	self.menu.grid(row=20, column=4, padx=(0,10))

#	self.menu=Button(self.frameThree, text='Menu', command=self.menu_inicial)
#	self.menu.grid(row=18, column=3, padx=(0,10))

	self.salir=Button(self.frameThree, text='Salir', command=self.quit)
	self.salir.grid(row=21, column=4, padx=(0,10))

	self.salir=Button(self.frameThree, text='Cambiar Nombre', command=nombre)
	self.salir.grid(row=21, column=3, padx=(0,10))

###############################PYTHON##########################################

if __name__ == "__main__":
    	root = Tk()
    	aplicacion = Planificador(root)
	root.mainloop()

