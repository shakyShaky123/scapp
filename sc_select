#!/usr/bin/env python
# -*- coding: utf-8 -*-
import codecs
import MySQLdb
from Tkinter import *
import tkFileDialog
import datetime
import tkMessageBox
import Tkinter
import sys
import os
import subprocess
import os, time, math, tempfile
import numpy 
from glob import glob
from time import *
from datetime import *
import matplotlib.pyplot as plt
import matplotlib as mpl
from matplotlib import cm

reload(sys)  # Reload does the trick!
sys.setdefaultencoding('iso-8859-1')
UTF8Writer = codecs.getwriter('utf8')
sys.stdout = UTF8Writer(sys.stdout)

#ruta = "/Comparacion_seiscomp_seisan/"
#ruta = "/comparacion/Comparacion_seiscomp_seisan/"
#ruta = "/home/camilo/Comparacion_seiscomp_seisan/"
#ruta = "/home/camilo/read_seiscomp/Busquedas_BD/"
#ruta = "/home/camilo/Backup_208/camilo/read_select.208/V3_codigo/"
#ruta = "/home/camilo/TEMP/scapp/"
#ruta = "/home/camilo/scapp/"
ruta = os.path.dirname(os.path.abspath(__file__))+"/"

#os.system("cp "+ruta+"search/search.py "+ruta)

try:
    import Gnuplot, Gnuplot.PlotItems, Gnuplot.funcutils
except ImportError:
    #kludge in case Gnuplot hasn't been installed as a module yet:
    import __init__
    Gnuplot = __init__
    import PlotItems
    Gnuplot.PlotItems = PlotItems
    import funcutils
    Gnuplot.funcutils = funcutils

class Planificador(Frame):
    def __init__(self,master):
        Frame.__init__(self, master)
        self.master = master
        self.initUI()

    def initUI(self):
        self.master.title("Select")
        self.frameOne = Frame(self.master)
        self.frameOne.grid(row=0,column=0)
        #self.frameOne = Frame(self.master)
        #self.frameOne.grid(row=1, column=0)
	#self.frameThree = Frame(self.master)
        #self.frameThree.grid(row=3, column=0)
	#self.frameFour = Frame(self.master)
        #self.frameFour.grid(row=4, column=0)
	
	#parametros=glob("/home/Cmunoz/read_select/select.inp")
	#archivo=open(parametros[0],"r")
	##print "Nombre del archivo : ", archivo.name
	##print "Cerrado o no : ", archivo.closed
	##print "Modo de apertura : ", archivo.mode
	#lines=archivo.readlines()
	##print (lines[0])
	#contenido = ''
	
	self.select_seiscomp()

############################Ventana select_seiscomp####################################

    def select_seiscomp(self):
	self.frameOne=Toplevel()
	
        #self.frameOne.grid_remove()
	
	self.v1,self.v2,self.v3,self.v4,self.v5,self.v6,self.v7,self.v8,self.v9,self.v10,self.v11,self.v12,self.v13,self.v14,self.v15,self.v16,self.v17,self.v18,self.v19,self.v20,self.v21,self.v22,self.v23,self.v24,self.v25,self.v26,self.v27,self.v28,self.v29,self.v30,self.v31,self.v32,self.v33,self.v34=StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar(),StringVar()

	self.Var1,self.Var2,self.Var3,self.Var4,self.Var5,self.Var6,self.Var7,self.Var8,self.Var9,self.Var10,self.Var11,self.Var12,self.Var13,self.Var14,self.Var15,self.Var16,self.Var17,self.Var18,self.Var19,self.Var20,self.Var21,self.Var22,self.Var23,self.Var24,self.Var25,self.Var26,self.Var27,self.Var28,self.Var29,self.Var30,self.Var31,self.Var32,self.Var33,self.Var34,self.Var35,self.Var36,self.Var37,self.Var38,self.Var39,self.Var40=IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar(),IntVar()


	self.Var32.set('1'),self.Var1.set('1'),self.Var2.set('1'),self.Var38.set('1'),self.Var31.set('1'),self.Var36.set('1')

##################################Ventana del select################################
	#### Tituilo ###
	self.texto = Label(self.frameOne, height='3', text = "SELECT SEISCOMP ", justify="center")
        self.texto.grid(row=0, column=3)
	self.v33 = StringVar(self.frameOne)
	self.v33.set('232')
	self.O1 = OptionMenu(self.frameOne,self.v33,'232','13','xena1','222')
	self.O1.grid(row=0, column=4, padx=(0,10))
	####### Seleccion si la busqueda es sobre origenes o sobre eventos ##################
	self.check = Checkbutton(self.frameOne, variable = self.Var32, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=1, column=2)
	self.textopieza = Label(self.frameOne, text = "Busqueda de ", justify="left")
        self.textopieza.grid(row=1, column=3)
	self.v32 = StringVar(self.frameOne)
	self.v32.set('Eventos')
	self.O1 = OptionMenu(self.frameOne,self.v32,'Eventos','Origenes')
	self.O1.grid(row=1, column=4, padx=(0,10))


	####Tiempo##########
	self.check = Checkbutton(self.frameOne, variable = self.Var1, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=2, column=2)
	self.textopieza = Label(self.frameOne, text = "Tiempo Inicial", justify="left")
        self.textopieza.grid(row=2, column=3)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v1)
        self.E3.grid(row=2, column=4, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var2, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=3, column=2)
	self.textopieza = Label(self.frameOne, text = "Tiempo Final", justify="left")
        self.textopieza.grid(row=3, column=3)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v2)
        self.E3.grid(row=3, column=4, padx=(0,10))
	####Latitud##########
	self.check = Checkbutton(self.frameOne, variable = self.Var3, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=4, column=0)
	self.textopieza = Label(self.frameOne, text = "Latitud Minima", justify="left")
        self.textopieza.grid(row=4, column=1)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v3)
        self.E3.grid(row=4, column=2, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var4, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=5, column=0)
	self.textopieza = Label(self.frameOne, text = "Latitud Maxima", justify="left")
        self.textopieza.grid(row=5, column=1)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v4)
        self.E3.grid(row=5, column=2, padx=(0,10))
	####Longitud##########
	self.check = Checkbutton(self.frameOne, variable = self.Var5, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=6, column=0)
	self.textopieza = Label(self.frameOne, text = "Longitud Minima", justify="left")
        self.textopieza.grid(row=6, column=1)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v5)
        self.E3.grid(row=6, column=2, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var6, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=7, column=0)
	self.textopieza = Label(self.frameOne, text = "Longitud Maxima", justify="left")
        self.textopieza.grid(row=7, column=1)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v6)
        self.E3.grid(row=7, column=2, padx=(0,10))
	####Profundidad##########
	self.check = Checkbutton(self.frameOne, variable = self.Var7, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=8, column=0)
	self.textopieza = Label(self.frameOne, text = "Profundidad Minima", justify="left")
        self.textopieza.grid(row=8, column=1)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v7)
        self.E3.grid(row=8, column=2, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var8, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=9, column=0)
	self.textopieza = Label(self.frameOne, text = "Profundidad Maxima", justify="left")
        self.textopieza.grid(row=9, column=1)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v8)
        self.E3.grid(row=9, column=2, padx=(0,10))
	####Magnitud#############
	self.check = Checkbutton(self.frameOne, variable = self.Var9, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=10, column=0)
	self.textopieza = Label(self.frameOne, text = "Magnitud Minima", justify="left")
        self.textopieza.grid(row=10, column=1)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v9)
        self.E3.grid(row=10, column=2, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var10, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=11, column=0)
	self.textopieza = Label(self.frameOne, text = "Magnitud Maxima", justify="left")
        self.textopieza.grid(row=11, column=1)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v10)
        self.E3.grid(row=11, column=2, padx=(0,10))
	####Fases#############
	self.check = Checkbutton(self.frameOne, variable = self.Var11, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=12, column=0)
	self.textopieza = Label(self.frameOne, text = "Numero Fases Minimo", justify="left")
        self.textopieza.grid(row=12, column=1)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v11)
        self.E3.grid(row=12, column=2, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var12, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=13, column=0)
	self.textopieza = Label(self.frameOne, text = "Numero Fases Maximo", justify="left")
        self.textopieza.grid(row=13, column=1)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v12)
        self.E3.grid(row=13, column=2, padx=(0,10))
	####Estaciones#############
	self.check = Checkbutton(self.frameOne, variable = self.Var13, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=14, column=0)
	self.textopieza = Label(self.frameOne, text = "Numero Estaciones Minimo", justify="left")
        self.textopieza.grid(row=14, column=1)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v13)
        self.E3.grid(row=14, column=2, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var14, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=15, column=0)
	self.textopieza = Label(self.frameOne, text = "Numero Estaciones Maximo", justify="left")
        self.textopieza.grid(row=15, column=1)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v14)
        self.E3.grid(row=15, column=2, padx=(0,10))
	####Error Latitud#############
	self.check = Checkbutton(self.frameOne, variable = self.Var15, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=4, column=3)
	self.textopieza = Label(self.frameOne, text = "Minimo Error en Latitud", justify="left")
        self.textopieza.grid(row=4, column=4)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v15)
        self.E3.grid(row=4, column=5, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var16, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=5, column=3)
	self.textopieza = Label(self.frameOne, text = "Maximo Error en Latitud", justify="left")
        self.textopieza.grid(row=5, column=4)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v16)
        self.E3.grid(row=5, column=5, padx=(0,10))
	####Error Longitud#############
	self.check = Checkbutton(self.frameOne, variable = self.Var17, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=6, column=3)
	self.textopieza = Label(self.frameOne, text = "Minimo Error en Longitud", justify="left")
        self.textopieza.grid(row=6, column=4)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v17)
        self.E3.grid(row=6, column=5, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var18, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=7, column=3)
	self.textopieza = Label(self.frameOne, text = "Maximo Error en Longitud", justify="left")
        self.textopieza.grid(row=7, column=4)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v18)
        self.E3.grid(row=7, column=5, padx=(0,10))
	####Error Profundidad#############
	self.check = Checkbutton(self.frameOne, variable = self.Var19, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=8, column=3)
	self.textopieza = Label(self.frameOne, text = "Minimo Error en Profundidad", justify="left")
        self.textopieza.grid(row=8, column=4)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v19)
        self.E3.grid(row=8, column=5, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var20, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=9, column=3)
	self.textopieza = Label(self.frameOne, text = "Maximo Error en Profundidad", justify="left")
        self.textopieza.grid(row=9, column=4)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v20)
        self.E3.grid(row=9, column=5, padx=(0,10))
	####RMS#############
	self.check = Checkbutton(self.frameOne, variable = self.Var21, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=10, column=3)
	self.textopieza = Label(self.frameOne, text = "Minimo RMS", justify="left")
        self.textopieza.grid(row=10, column=4)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v21)
        self.E3.grid(row=10, column=5, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var22, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=11, column=3)
	self.textopieza = Label(self.frameOne, text = "Maximo RMS", justify="left")
        self.textopieza.grid(row=11, column=4)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v22)
        self.E3.grid(row=11, column=5, padx=(0,10))
	####GAP#############
	self.check = Checkbutton(self.frameOne, variable = self.Var23, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=12, column=3)
	self.textopieza = Label(self.frameOne, text = "Minimo GAP", justify="left")
        self.textopieza.grid(row=12, column=4)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v23)
        self.E3.grid(row=12, column=5, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var24, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=13, column=3)
	self.textopieza = Label(self.frameOne, text = "Maximo GAP", justify="left")
        self.textopieza.grid(row=13, column=4)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v24)
        self.E3.grid(row=13, column=5, padx=(0,10))
	####Distancia Primera Estacion#############
	self.check = Checkbutton(self.frameOne, variable = self.Var25, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=14, column=3)
	self.textopieza = Label(self.frameOne, text = "Minima Distancia a Primera Estacion", justify="left")
        self.textopieza.grid(row=14, column=4)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v25)
        self.E3.grid(row=14, column=5, padx=(0,10))
	
	self.check = Checkbutton(self.frameOne, variable = self.Var26, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=15, column=3)
	self.textopieza = Label(self.frameOne, text = "Maxima Distancia a Primera Estacion", justify="left")
        self.textopieza.grid(row=15, column=4)
	self.E3 = Entry(self.frameOne,width=14,textvariable=self.v26)
        self.E3.grid(row=15, column=5, padx=(0,10))
	####Tipo Magnitud##############
	self.check = Checkbutton(self.frameOne, variable = self.Var27, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=16, column=3)
	self.textopieza = Label(self.frameOne, text = "Tipo De Magnitud", justify="left")
        self.textopieza.grid(row=16, column=4)
	self.v27 = StringVar(self.frameOne)
	self.v27.set('MLr')
	self.O1 = OptionMenu(self.frameOne,self.v27,'MLr','ML','Mw(mB)','Mwp','MW','mB','mb')
	self.O1.grid(row=16, column=5, padx=(0,10))
	####Status##############
	self.check = Checkbutton(self.frameOne, variable = self.Var28, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=17, column=3)
	self.textopieza = Label(self.frameOne, text = "Estatus", justify="left")
        self.textopieza.grid(row=17, column=4)
	self.v28 = StringVar(self.frameOne)
	self.v28.set('automatic')
	self.O1 = OptionMenu(self.frameOne,self.v28,'automatic','manual')
	self.O1.grid(row=17, column=5, padx=(0,10))
	####Agency##############
	self.check = Checkbutton(self.frameOne, variable = self.Var29, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=16, column=0)
	self.textopieza = Label(self.frameOne, text = "Agency", justify="left")
        self.textopieza.grid(row=16, column=1)
	self.v29 = StringVar(self.frameOne)
	self.v29.set('SGC')
	self.O1 = OptionMenu(self.frameOne,self.v29,'SGC','SGC2','GFZ')
	self.O1.grid(row=16, column=2, padx=(0,10))
	####Author##############
	self.check = Checkbutton(self.frameOne, variable = self.Var30, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=17, column=0)
	self.textopieza = Label(self.frameOne, text = "Author", justify="left")
        self.textopieza.grid(row=17, column=1)
	self.v30 = StringVar(self.frameOne)
	self.v30.set('scanloc')
	self.O1 = OptionMenu(self.frameOne,self.v30,'scanloc','scanloc_b','scautoloc_regional', "kvallejo@proc1", "squintero@proc1")
	self.O1.grid(row=17, column=2, padx=(0,10))
	####Region##############
	self.check = Checkbutton(self.frameOne, variable = self.Var31, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=18, column=3)
	self.textopieza = Label(self.frameOne, text = "Region", justify="left")
        self.textopieza.grid(row=18, column=4)
	self.v31 = StringVar(self.frameOne)
	self.v31.set('Boletin')
	self.v31_fix = StringVar(self.frameOne)
	self.v31_fix2 = StringVar(self.frameOne)
	self.v31_fix.set('Pacífico')
	self.v31_fix2.set('Volcán')
	self.O1 = OptionMenu(self.frameOne,self.v31,'Boletin','Colombia','Panama','Ecuador','Venezuela','Caribe','Pacífico','Volcán')
	self.O1.grid(row=18, column=5, padx=(0,10), pady=5)

	self.check = Checkbutton(self.frameOne, variable = self.Var38, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=18, column=0)
	self.textopieza = Label(self.frameOne, text = "No usar explosiones, no localizables, eventos falsos ni fuera de la red", justify="left")
        self.textopieza.grid(row=18, column=1, columnspan = 2, sticky=W)
	self.check = Checkbutton(self.frameOne, variable = self.Var40, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=19, column=0)
	self.textopieza = Label(self.frameOne, text = "Eventos Destacados (incluye sentidos)", justify="left")
        self.textopieza.grid(row=19, column=1)

	self.check = Checkbutton(self.frameOne, variable = self.Var39, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=20, column=0)
	self.textopieza = Label(self.frameOne, text = "Eventos Sentidos (con reporte de  sentido asociado)", justify="left")
        self.textopieza.grid(row=20, column=1)







	#########Menu para busqueda de Origenes########################
	self.texto = Label(self.frameOne, height='3', text = "Para Busquedas de Origenes:", justify="center")
        self.texto.grid(row=21, column=0)

	self.texto = Label(self.frameOne, height='3', text = "Usar Magnitud Origen Preferido", justify="center")
        self.texto.grid(row=22, column=1)

	self.check = Checkbutton(self.frameOne, variable = self.Var33, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=22, column=0)

	self.texto = Label(self.frameOne, height='3', text = "Seleccionar Ultimo Origen", justify="center")
        self.texto.grid(row=23, column=1)

	self.check = Checkbutton(self.frameOne, variable = self.Var34, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=23, column=0)

	###########################Tablas#################################


	self.check = Checkbutton(self.frameOne, variable = self.Var36, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=19, column=3)
	self.v36 = StringVar(self.frameOne)
	self.texto = Label(self.frameOne, height='3', text = "Tablas", justify="center")
        self.texto.grid(row=19, column=4)
	self.v36.set('Todos los Eventos')
	self.O1 = OptionMenu(self.frameOne,self.v36,'Todos los Eventos','Eventos Destacados')
	self.O1.grid(row=19, column=5, padx=(0,10))

#	self.texto = Label(self.frameOne, height='3', text = "Tabla Todos los Eventos", justify="center")
#        self.texto.grid(row=20, column=4)

#	self.check = Checkbutton(self.frameOne, variable = self.Var36, onvalue =1, offvalue = 0, height=1, width = 5)
#	self.check.grid(row=20, column=3)


#	self.texto = Label(self.frameOne, height='3', text = "Tabla Eventos Destacados", justify="center")
#        self.texto.grid(row=21, column=4)

#	self.check = Checkbutton(self.frameOne, variable = self.Var37, onvalue =1, offvalue = 0, height=1, width = 5)
#	self.check.grid(row=21, column=3)





	##########Busqueda anterior###########################
	self.texto = Label(self.frameOne, height='3', text = "Cargar Busqueda Anterior", justify="center")
        self.texto.grid(row=0, column=5)

	self.check = Checkbutton(self.frameOne, variable = self.Var35, onvalue =1, offvalue = 0, height=1, width = 5)
	self.check.grid(row=1, column=5)

###########Logo###############################
	self.c1 = Canvas(self.frameOne, width=150, height=60, bg='#DCDCDC')
	self.ima1 = PhotoImage(file=ruta+'Logo-SGC3.gif')
	self.c1.grid(row=0, column=0, rowspan = 4, sticky=E+N, pady=25)
	self.c1.create_image((0,0), image=self.ima1,anchor=NW)

	self.c1_1 = Canvas(self.frameOne, width=100, height=40, bg='#DCDCDC')
	self.ima2 = PhotoImage(file=ruta+'mysqldb.gif')
	self.c1_1.grid(row=0, column=1, rowspan = 2, sticky=N, pady=27)
	self.c1_1.create_image((0,0), image=self.ima2,anchor=NW)

############Linea###############################

	self.c2 = Canvas(self.frameOne, width=5, height=600, bg='#DCDCDC')
	self.c2.grid(row=4, column=3, rowspan = 20, sticky=W)
	self.c2.create_line(3, 3, 3, 600,width=1)

	self.c3 = Canvas(self.frameOne, width=1000, height=5, bg='#DCDCDC')
	self.c3.grid(row=18, column=0, columnspan = 20, sticky=N)
	self.c3.create_line(3, 3, 1000, 3,width=1)

	self.c4 = Canvas(self.frameOne, width=1000, height=5, bg='#DCDCDC')
	self.c4.grid(row=21, column=0, columnspan = 20, sticky=N)
	self.c4.create_line(3, 3, 1000, 3,width=1)



################################Modificar search.py#################################

	def modificar2():
		if self.Var35.get() == 0:
			os.system("cp "+ruta+"search/search.py "+ruta)
		search=glob(ruta+"search.py")
		archivo1=open(search[0],"r")

		print "Nombre del archivo : ", archivo1.name
		lines=archivo1.readlines()
		#print (lines[0])
		contenido1 = ''

		for line in lines:
			campos = line.split(",")
			if 'host=' in line:
				if str(self.v33.get()) == '13':
					contenido1 +="db = MySQLdb.connect(host='10.100.100.13',    # your host, usually localhost\n"
				elif str(self.v33.get()) == 'xena1':
					contenido1 +="db = MySQLdb.connect(host='172.25.3.85',    # your host, usually localhost\n"
				elif  str(self.v33.get()) == '222':
					contenido1 +="db = MySQLdb.connect(host='10.100.100.222',    # your host, usually localhost\n"
				else:
					contenido1 += line
			elif 'user=' in line:
				if str(self.v33.get()) == '13':
					contenido1 +="                     user='consulta',         # your username\n"
				elif str(self.v33.get()) == 'xena1':
					contenido1 +="                     user='sysop',         # your username\n"
				elif  str(self.v33.get()) == '222':
					contenido1 +="                     user='sysop',         # your username\n"
				else:
					contenido1 += line
			elif 'passwd=' in line:
				if str(self.v33.get()) == '13':
					contenido1 +="                     passwd='consulta',  # your password\n"
				elif str(self.v33.get()) == 'xena1':
					contenido1 +="                     passwd='sysop',  # your password\n"
				elif  str(self.v33.get()) == '222':
					contenido1 +="                     passwd='sysop',  # your password\n"
				else:
					contenido1 += line
			elif 'archivo1=open' in line:
				if str(self.v33.get()) == '13':
					contenido1 +="archivo1=open('sc_report.out','w')\n"
				elif str(self.v33.get()) == 'xena1':
					contenido1 +="archivo1=open('sc_report.out','w')\n"
				elif  str(self.v33.get()) == '222':
					contenido1 +="archivo1=open('sc_report.out','w')\n"
				else:
					contenido1 += line


			elif 'PublicObject AS POrigin,' in line:
				if self.Var32.get() == 1:
					if str(self.v32.get()) == 'Origenes':
						contenido1 +="			Event, Origin, PublicObject AS POrigin, OriginReference, Magnitude, PublicObject AS PEvent, EventDescription, PublicObject AS PMagnitude \\\n"
				#"""
				# si se seleccionó sentido y destacado
				if self.Var39.get()==1 and self.Var40.get()==1:
						contenido1 +="			Event, PublicObject AS PEvent, EventDescription, FeltReport, Origin, PublicObject AS POrigin, Magnitude, PublicObject AS PMagnitude, Comment \\\n"

				# si se seleccionó sentido y no destacado
				elif self.Var39.get()==1 and self.Var40.get()!=1:
						contenido1 +="			Event, PublicObject AS PEvent, EventDescription, FeltReport, Origin, PublicObject AS POrigin, Magnitude, PublicObject AS PMagnitude \\\n"

				# si se seleccionó no sentido y destacado
				elif self.Var39.get()!=1 and self.Var40.get()==1:
						contenido1 +="			Event, PublicObject AS PEvent, EventDescription, Origin, PublicObject AS POrigin, Magnitude, PublicObject AS PMagnitude, Comment \\\n"

				# si no seleccionó sentido y ni destacado
				else:
					contenido1 += line

				"""
				if self.Var39.get() == 1:
					if self.Var40.get() == 1:
						contenido1 +="			Event, PublicObject AS PEvent, EventDescription, FeltReport, Origin, PublicObject AS POrigin, Magnitude, PublicObject AS PMagnitude, Comment \\\n"
					else:
						contenido1 +="			Event, PublicObject AS PEvent, EventDescription, FeltReport, Origin, PublicObject AS POrigin, Magnitude, PublicObject AS PMagnitude \\\n"

				if self.Var40.get() == 1:
					if self.Var39.get() == 1:
						contenido1 +="			Event, PublicObject AS PEvent, EventDescription, FeltReport, Origin, PublicObject AS POrigin, Magnitude, PublicObject AS PMagnitude, Comment \\\n"
					else:
						contenido1 +="			Event, PublicObject AS PEvent, EventDescription, Origin, PublicObject AS POrigin, Magnitude, PublicObject AS PMagnitude, Comment \\\n"
				"""
								
			elif 'AND POrigin.publicID = OriginReference.originID' in line:
				if self.Var32.get() == 1:
					if str(self.v32.get()) == 'Origenes':
						contenido1 +="			AND POrigin.publicID = OriginReference.originID \\\n"
					else:
						contenido1 += line
				else:
					contenido1 += line
			elif 'AND OriginReference._parent_oid = Event._oid' in line:
				if self.Var32.get() == 1:
					if str(self.v32.get()) == 'Origenes':
						contenido1 +="			AND OriginReference._parent_oid = Event._oid \\\n"
					else:
						contenido1 += line
				else:
					contenido1 += line
			elif 'AND Magnitude._parent_oid = Origin._oid' in line:
				if self.Var32.get() == 1:
					if str(self.v32.get()) == 'Origenes':
						if self.Var33.get() == 1:
							contenido1 += line
						else:
							contenido1 +="			AND Magnitude._parent_oid = Origin._oid \\\n"
					else:
						contenido1 += line
				else:
					contenido1 += line
			elif 'AND Event.preferredOriginID=POrigin.publicID' in line:
				if self.Var32.get() == 1:
					if str(self.v32.get()) == 'Origenes':
						contenido1 +="			/*AND Event.preferredOriginID=POrigin.publicID */\\\n"
					else:
						contenido1 += line
				else:
					contenido1 += line
			elif 'AND Event.preferredMagnitudeID=PMagnitude.publicID' in line:
				if self.Var32.get() == 1:
					if str(self.v32.get()) == 'Origenes':
						if self.Var33.get() == 1:
							contenido1 += line
						else:
							contenido1 +="			/*AND Event.preferredMagnitudeID=PMagnitude.publicID */\\\n"
					else:
						contenido1 += line
				else:
					contenido1 += line
			elif 'AND Origin.time_value' in line:
				if self.Var1.get() == 1:
					if self.Var2.get() == 1:
						print self.v1.get()
						print self.v2.get()
						contenido1 +="			AND Origin.time_value BETWEEN '"+self.v1.get()+"' AND '"+self.v2.get()+"'\\\n"
				else:
					contenido1 += line

			elif 'AND ROUND(Origin.latitude_value,2)' in line:
				if self.Var3.get() == 1:
					if self.Var4.get() == 1:
						print self.v3.get()
						print self.v4.get()
						contenido1 +="			AND ROUND(Origin.latitude_value,2) BETWEEN "+self.v3.get()+" AND "+self.v4.get()+" \\\n"
				else:
					contenido1 += line

			elif 'AND ROUND(Origin.longitude_value,2)' in line:
				if self.Var5.get() == 1:
					if self.Var6.get() == 1:
						print self.v5.get()
						print self.v6.get()
						contenido1 +="			AND ROUND(Origin.longitude_value,2) BETWEEN "+self.v5.get()+" AND "+self.v6.get()+" \\\n"
				else:
					contenido1 += line
			elif 'AND Origin.depth_value' in line:
				if self.Var7.get() == 1:
					if self.Var8.get() == 1:
						print self.v7.get()
						print self.v8.get()
						contenido1 +="			AND Origin.depth_value BETWEEN "+self.v7.get()+" AND "+self.v8.get()+" \\\n"
				else:
					contenido1 += line
			elif 'AND ROUND(Magnitude.magnitude_value,1)' in line:
				if self.Var9.get() == 1:
					if self.Var10.get() == 1:
						print self.v9.get()
						print self.v10.get()
						contenido1 +="			AND ROUND(Magnitude.magnitude_value,1) BETWEEN "+self.v9.get()+" AND "+self.v10.get()+" \\\n"
				else:
					contenido1 += line
			elif 'AND Origin.quality_usedPhaseCount' in line:
				if self.Var11.get() == 1:
					if self.Var12.get() == 1:
						print self.v11.get()
						print self.v12.get()
						contenido1 +="			AND Origin.quality_usedPhaseCount BETWEEN "+self.v11.get()+" AND "+self.v12.get()+" \\\n"
				else:
					contenido1 += line
			elif 'AND Origin.quality_usedStationCount' in line:
				if self.Var13.get() == 1:
					if self.Var14.get() == 1:
						print self.v13.get()
						print self.v14.get()
						contenido1 +="			AND Origin.quality_usedStationCount BETWEEN "+self.v13.get()+" AND "+self.v14.get()+" \\\n"
				else:
					contenido1 += line
			elif 'AND ROUND(Origin.latitude_uncertainty,2)' in line:
				if self.Var15.get() == 1:
					if self.Var16.get() == 1:
						print self.v15.get()
						print self.v16.get()
						contenido1 +="			AND ROUND(Origin.latitude_uncertainty,2) BETWEEN "+self.v15.get()+" AND "+self.v16.get()+" \\\n"
				else:
					contenido1 += line
			elif 'AND ROUND(longitude_uncertainty,2)' in line:
				if self.Var17.get() == 1:
					if self.Var18.get() == 1:
						print self.v17.get()
						print self.v18.get()
						contenido1 +="			AND ROUND(Origin.longitude_uncertainty,2) BETWEEN "+self.v17.get()+" AND "+self.v18.get()+" \\\n"
				else:
					contenido1 += line
			elif 'AND ROUND(Origin.depth_uncertainty,2)' in line:
				if self.Var19.get() == 1:
					if self.Var20.get() == 1:
						print self.v19.get()
						print self.v20.get()
						contenido1 +="			AND ROUND(Origin.depth_uncertainty,2) BETWEEN "+self.v19.get()+" AND "+self.v20.get()+" \\\n"
				else:
					contenido1 += line
			elif 'AND ROUND(Origin.quality_standardError,2)' in line:
				if self.Var21.get() == 1:
					if self.Var22.get() == 1:
						print self.v21.get()
						print self.v22.get()
						contenido1 +="			AND ROUND(Origin.quality_standardError,2) BETWEEN "+self.v21.get()+" AND "+self.v22.get()+" \\\n"
				else:
					contenido1 += line
			elif 'AND ROUND(Origin.quality_azimuthalGap,2)' in line:
				if self.Var23.get() == 1:
					if self.Var24.get() == 1:
						print self.v23.get()
						print self.v24.get()
						contenido1 +="			AND ROUND(Origin.quality_azimuthalGap,2) BETWEEN "+self.v23.get()+" AND "+self.v24.get()+" \\\n"
				else:
					contenido1 += line
			elif 'AND ROUND(Origin.quality_minimumDistance,2)' in line:
				if self.Var25.get() == 1:
					if self.Var26.get() == 1:
						print self.v25.get()
						print self.v26.get()
						contenido1 +="			AND ROUND(Origin.quality_minimumDistance,2) BETWEEN "+self.v25.get()+" AND "+self.v26.get()+" \\\n"
				else:
					contenido1 += line
			elif 'AND Magnitude.type' in line:
				if self.Var27.get() == 1:
						print self.v27.get()
						contenido1 +="			AND Magnitude.type='"+self.v27.get()+"' \\\n"
				else:
					contenido1 += line
			elif 'AND Origin.evaluationMode' in line:
				if self.Var28.get() == 1:
						print self.v28.get()
						contenido1 +="			AND Origin.evaluationMode='"+self.v28.get()+"' \\\n"
				else:
					contenido1 += line
			elif 'AND Origin.creationInfo_agencyID' in line:
				if self.Var29.get() == 1:
						print self.v29.get()
						contenido1 +="			AND Origin.creationInfo_agencyID='"+self.v29.get()+"' \\\n"
				else:
					contenido1 += line
			elif 'AND Origin.creationInfo_author' in line:
				if self.Var30.get() == 1:
						print self.v30.get()
						contenido1 +="			AND Origin.creationInfo_author='"+self.v30.get()+"' \\\n"
				else:
					contenido1 += line
			
			elif 'AND (Event.type' in line:
				if self.Var38.get() == 1:
						contenido1 +="			AND (Event.type NOT IN ('not locatable', 'explosion', 'not existing', 'outside of network interest') OR Event.type IS NULL)\\\n"
				else:
					contenido1 += line

			elif 'AND Event._oid = FeltReport._oid' in line:
				if self.Var39.get() == 1:
						contenido1 +="			AND Event._oid = FeltReport._oid \\\n"
				else:
					contenido1 += line
			elif 'AND FeltReport.report NOT LIKE' in line:
				if self.Var39.get() == 1:
						contenido1 +="			AND FeltReport.report NOT LIKE '' \\\n"
				else:
					contenido1 += line

			elif 'AND Comment._parent_oid = Event._oid' in line:
				if self.Var40.get() == 1:
						contenido1 +="			AND Comment._parent_oid = Event._oid \\\n"
				else:
					contenido1 += line

			elif "AND Comment.text LIKE '%DESTACADO%'" in line:
				if self.Var40.get() == 1:
						contenido1 += "			AND Comment.text LIKE '%DESTACADO%' \\\n"
				else:
					contenido1 += line

			elif 'AND EventDescription.type' in line:
				if self.Var31.get() == 1:
						print self.v31.get()
						if self.v31.get() == 'Boletin':
							contenido1 +="			AND EventDescription.type = 'region name' AND (EventDescription.text LIKE '%"+self.v31_fix.get()+"%' OR EventDescription.text LIKE '%Colombia%' OR EventDescription.text LIKE '%Caribe%' OR EventDescription.text LIKE '%Caribbean%' OR EventDescription.text LIKE '%"+self.v31_fix2.get()+"%')\\\n"	
						else:
							contenido1 +="			AND EventDescription.type = 'region name' AND EventDescription.text LIKE '%"+self.v31.get()+"%' \\\n"
				else:
					contenido1 += line
################################################################INFORMACION INGRESADA GUARDADA EN COMENTARIOS#########################################################
			elif '#SERVIDOR' in line:
				contenido1 += "#SERVIDOR,"+str(self.v33.get())+"\n"
				if self.Var35.get() == 1:
					cont1 = 0
					for campo in campos:
						cont1 += 1
						if cont1 == 2:
							self.v33.set(campo.strip())
							print self.v33.get()
			elif '#BUSQUEDA' in line:
				if self.Var32.get() == 1:
					contenido1 += "#BUSQUEDA,"+str(self.v32.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v32.set(campo.strip())
								print self.v32.get()
			elif '#TIME_INI' in line:
				if self.Var1.get() == 1:
					contenido1 += "#TIME_INI,"+str(self.v1.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v1.set(campo.strip())
								print self.v1.get()
			elif '#TIME_END' in line:
				if self.Var2.get() == 1:
					contenido1 += "#TIME_END,"+str(self.v2.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v2.set(campo.strip())
								print self.v2.get()
			elif '#LAT_MIN' in line:
				if self.Var3.get() == 1:
					contenido1 += "#LAT_MIN,"+str(self.v3.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v3.set(campo.strip())
								print self.v3.get()
			elif '#LAT_MAX' in line:
				if self.Var4.get() == 1:
					contenido1 += "#LAT_MAX,"+str(self.v4.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v4.set(campo.strip())
								print self.v4.get()
			elif '#LON_MIN' in line:
				if self.Var5.get() == 1:
					contenido1 += "#LON_MIN,"+str(self.v5.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v5.set(campo.strip())
								print self.v5.get()
			elif '#LON_MAX' in line:
				if self.Var6.get() == 1:
					contenido1 += "#LON_MAX,"+str(self.v6.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v6.set(campo.strip())
								print self.v6.get()
			elif '#DEP_MIN' in line:
				if self.Var7.get() == 1:
					contenido1 += "#DEP_MIN,"+str(self.v7.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v7.set(campo.strip())
								print self.v7.get()
			elif '#DEP_MAX' in line:
				if self.Var8.get() == 1:
					contenido1 += "#DEP_MAX,"+str(self.v8.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v8.set(campo.strip())
								print self.v8.get()
			elif '#MAG_MIN' in line:
				if self.Var9.get() == 1:
					contenido1 += "#MAG_MIN,"+str(self.v9.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v9.set(campo.strip())
								print self.v9.get()
			elif '#MAG_MAX' in line:
				if self.Var10.get() == 1:
					contenido1 += "#MAG_MAX,"+str(self.v10.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v10.set(campo.strip())
								print self.v10.get()
			elif '#PHASE_MIN' in line:
				if self.Var11.get() == 1:
					contenido1 += "#PHASE_MIN,"+str(self.v11.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v11.set(campo.strip())
								print self.v11.get()
			elif '#PHASE_MAX' in line:
				if self.Var12.get() == 1:
					contenido1 += "#PHASE_MAX,"+str(self.v12.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v12.set(campo.strip())
								print self.v12.get()
			elif '#STA_MIN' in line:
				if self.Var13.get() == 1:
					contenido1 += "#STA_MIN,"+str(self.v13.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v13.set(campo.strip())
								print self.v13.get()
			elif '#STA_MAX' in line:
				if self.Var14.get() == 1:
					contenido1 += "#STA_MAX,"+str(self.v14.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v14.set(campo.strip())
								print self.v14.get()
			elif '#LAT_ERROR_MIN' in line:
				if self.Var15.get() == 1:
					contenido1 += "#LAT_ERROR_MIN,"+str(self.v15.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v15.set(campo.strip())
								print self.v15.get()
			elif '#LAT_ERROR_MAX' in line:
				if self.Var16.get() == 1:
					contenido1 += "#LAT_ERROR_MAX,"+str(self.v16.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v16.set(campo.strip())
								print self.v16.get()
			elif '#LON_ERROR_MIN' in line:
				if self.Var17.get() == 1:
					contenido1 += "#LON_ERROR_MIN,"+str(self.v17.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v17.set(campo.strip())
								print self.v17.get()
			elif '#LON_ERROR_MAX' in line:
				if self.Var18.get() == 1:
					contenido1 += "#LON_ERROR_MAX,"+str(self.v18.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v18.set(campo.strip())
								print self.v18.get()
			elif '#DEP_ERROR_MIN' in line:
				if self.Var19.get() == 1:
					contenido1 += "#DEP_ERROR_MIN,"+str(self.v19.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v19.set(campo.strip())
								print self.v19.get()
			elif '#DEP_ERROR_MAX' in line:
				if self.Var20.get() == 1:
					contenido1 += "#DEP_ERROR_MAX,"+str(self.v20.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v20.set(campo.strip())
								print self.v20.get()
			elif '#RMS_MIN' in line:
				if self.Var21.get() == 1:
					contenido1 += "#RMS_MIN,"+str(self.v21.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v21.set(campo.strip())
								print self.v21.get()
			elif '#RMS_MAX' in line:
				if self.Var22.get() == 1:
					contenido1 += "#RMS_MAX,"+str(self.v22.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v22.set(campo.strip())
								print self.v22.get()
			elif '#GAP_MIN' in line:
				if self.Var23.get() == 1:
					contenido1 += "#GAP_MIN,"+str(self.v23.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v23.set(campo.strip())
								print self.v23.get()
			elif '#GAP_MAX' in line:
				if self.Var24.get() == 1:
					contenido1 += "#GAP_MAX,"+str(self.v24.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v24.set(campo.strip())
								print self.v24.get()
			elif '#DIST_STA_MIN' in line:
				if self.Var25.get() == 1:
					contenido1 += "#DIST_STA_MIN,"+str(self.v25.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v25.set(campo.strip())
								print self.v25.get()
			elif '#DIST_STA_MAX' in line:
				if self.Var26.get() == 1:
					contenido1 += "#DIST_STA_MAX,"+str(self.v26.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v26.set(campo.strip())
								print self.v26.get()
			elif '#MAG_TYPE' in line:
				if self.Var27.get() == 1:
					contenido1 += "#MAG_TYPE,"+str(self.v27.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v27.set(campo.strip())
								print self.v27.get()
			elif '#ESTATUS' in line:
				if self.Var28.get() == 1:
					contenido1 += "#ESTATUS,"+str(self.v28.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v28.set(campo.strip())
								print self.v28.get()
			elif '#AGENCIA' in line:
				if self.Var29.get() == 1:
					contenido1 += "#AGENCIA,"+str(self.v29.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v29.set(campo.strip())
								print self.v29.get()
			elif '#AUTOR' in line:
				if self.Var30.get() == 1:
					contenido1 += "#AUTOR,"+str(self.v30.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v30.set(campo.strip())
								print self.v30.get()
			elif '#REGION' in line:
				if self.Var31.get() == 1:
					contenido1 += "#REGION,"+str(self.v31.get())+"\n"
				else:
					contenido1 += line
					if self.Var35.get() == 1:
						cont1 = 0
						for campo in campos:
							cont1 += 1
							if cont1 == 2:
								self.v31.set(campo.strip())
								print self.v31.get()
			else:
				contenido1 += line
			
		archivo1.close()
		archivo1=open(search[0],"w")
		archivo1.write(contenido1.decode('iso-8859-1').encode('UTF-8', 'strict'))
		archivo1.close()

	def conf():
		os.system("gedit "+ruta+"search.py &")
	def select():
		os.system(ruta+"./search.py")
		if self.Var34.get() == 1:
			if str(self.v33.get()) == '13':
				os.system("origen_only.py sc_report.out")
			if str(self.v33.get()) == 'xena1':
				os.system("origen_only.py sc_report.out")
			if str(self.v33.get()) == '222':
				os.system("origen_only.py sc_report.out")
			if str(self.v33.get()) == '232':
				os.system("origen_only.py sc_report.out")
		if self.v36.get() == "Todos los Eventos":
			os.system(ruta+"./sc_tablas.py sc_mensual.out")
			os.system(ruta+"./mensual_modif.py")
		if self.v36.get() == "Eventos Destacados":
			os.system(ruta+"./sc_tablas.py sc_destacados.out")
			os.system(ruta+"./dest_modif.py")
		
	def disp():
		if str(self.v33.get()) == '13':
			os.system("gedit sc_report.out &")
		elif str(self.v33.get()) == 'xena1':
			os.system("gedit sc_report.out &")
		elif str(self.v33.get()) == '222':
			os.system("gedit sc_report.out &")
		else:
			os.system("gedit sc_report.out &")







	self.mostrar=Button(self.frameOne, text='Cargar Datos', command=modificar2)
	self.mostrar.grid(row=32, column=0, padx=(0,10))

	self.mostrar2=Button(self.frameOne, text='Select',command=select)
	self.mostrar2.grid(row=32, column=1, padx=(0,10))

	self.mostrar2=Button(self.frameOne, text='Mostrar Select',command=disp)
	self.mostrar2.grid(row=32, column=3, padx=(0,10))

	self.mostrar1=Button(self.frameOne, text='Mostrar Cofiguracion',command=conf)
	self.mostrar1.grid(row=32, column=4, padx=(0,10))

#	self.menu=Button(self.frameOne, text='Menu')
#	self.menu.grid(row=32, column=4, padx=(0,10))

	self.salir=Button(self.frameOne, text='Menu', command=self.quit)
	self.salir.grid(row=32, column=5, padx=(0,10))


###############################PYTHON##########################################

if __name__ == "__main__":
    	root = Tk()
    	aplicacion = Planificador(root)
	root.mainloop()

